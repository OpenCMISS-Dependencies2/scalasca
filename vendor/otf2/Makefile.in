# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Create platform entries for EXTRA_DIST using e.g.:
# cd build-config/common/platforms
# for i in *; do echo "              \$(srcdir)/build-config/common/platforms/$i \\"; done

###############################################################################



VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
DIST_COMMON = $(srcdir)/build-config/common/Makefile.inc.am \
	$(srcdir)/build-config/common/platforms.am \
	$(srcdir)/include/otf2/Makefile.inc.am \
	$(srcdir)/share/Makefile.inc.am \
	$(srcdir)/src/tools/otf2_template/Makefile.inc.am \
	$(srcdir)/templates/Makefile.inc.am \
	$(srcdir)/doc/Makefile.inc.am \
	$(srcdir)/doc/examples/Makefile.inc.am \
	$(srcdir)/contrib-build-vs/Makefile.inc.am \
	$(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(top_srcdir)/doc/doxygen-user/doxygen-user.cfg.in \
	$(top_srcdir)/build-config/common/config-common.h \
	$(top_srcdir)/share/otf2/__version__.py.in \
	$(top_srcdir)/doc/doxygen-user/main.dox.in \
	$(top_srcdir)/src/tools/otf2_template/otf2_template.py \
	$(top_srcdir)/common/utils/src/exception/ErrorCodes.tmpl.h \
	$(srcdir)/otf2-mini-config.sh.in $(otf2pythonpkgdata_PYTHON) \
	$(top_srcdir)/build-config/py-compile $(dist_examples_DATA) \
	$(otf2include_HEADERS) $(top_srcdir)/build-config/test-driver \
	AUTHORS COPYING ChangeLog INSTALL README THANKS \
	build-config/ar-lib build-config/compile \
	build-config/config.guess build-config/config.sub \
	build-config/depcomp build-config/install-sh \
	build-config/missing build-config/py-compile \
	build-config/ltmain.sh $(top_srcdir)/build-config/config.guess \
	$(top_srcdir)/build-config/config.sub \
	$(top_srcdir)/build-config/install-sh \
	$(top_srcdir)/build-config/missing
@GIT_CONTROLLED_TRUE@@HAVE_UNCRUSTIFY_TRUE@am__append_1 = beautify-recursive
@CROSS_BUILD_FALSE@am__append_2 = $(srcdir)/build-frontend/configure.ac \
@CROSS_BUILD_FALSE@              $(srcdir)/build-frontend/aclocal.m4   \
@CROSS_BUILD_FALSE@              $(srcdir)/build-frontend/Makefile.am  \
@CROSS_BUILD_FALSE@              $(srcdir)/build-frontend/Makefile.in  \
@CROSS_BUILD_FALSE@              $(srcdir)/build-frontend/configure    \
@CROSS_BUILD_FALSE@              $(srcdir)/src/config-frontend.h.in

@HAVE_PYTHON_FOR_GENERATOR_TRUE@am__append_3 = $(SRC_ROOT)src/tools/otf2_template/otf2-template
@GIT_CONTROLLED_TRUE@am__append_4 = doxygen-user-pdf doxygen-user-html-compress copy-revision-file-to-dist sphinx-user-generate
@GIT_CONTROLLED_TRUE@am__append_5 = doc/doxygen-project-number.cfg
@GIT_CONTROLLED_TRUE@am__append_6 = doxygen-user-clean
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@am__append_7 = doc/doxygen-user/main.dox
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@am__append_8 = doc/doxygen-user-html.cfg doc/doxygen-user-at-make-time.cfg doxygen.err
@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@am__append_9 = doc/sphinx_project_number.py
TESTS =
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/build-config/common/m4/ac_common_package.m4 \
	$(top_srcdir)/build-config/common/m4/ac_recursive_eval.m4 \
	$(top_srcdir)/build-config/common/m4/ac_scorep_compiler_and_flags.m4 \
	$(top_srcdir)/build-config/common/m4/ac_scorep_doxygen.m4 \
	$(top_srcdir)/build-config/common/m4/ac_scorep_git_controlled.m4 \
	$(top_srcdir)/build-config/common/m4/ac_scorep_sys_detection.m4 \
	$(top_srcdir)/build-config/common/m4/ac_scorep_toplevel_args.m4 \
	$(top_srcdir)/build-config/common/m4/ac_scorep_uncrustify.m4 \
	$(top_srcdir)/build-config/common/m4/ac_scorep_version_and_revision.m4 \
	$(top_srcdir)/build-config/common/m4/afs_am_conditional.m4 \
	$(top_srcdir)/build-config/common/m4/afs_compiler_backend.m4 \
	$(top_srcdir)/build-config/common/m4/afs_debug_option.m4 \
	$(top_srcdir)/build-config/common/m4/afs_maintainer_mode.m4 \
	$(top_srcdir)/build-config/common/m4/afs_summary.m4 \
	$(top_srcdir)/build-config/common/m4/ax_config_subdir.m4 \
	$(top_srcdir)/build-config/m4/ax_python_module.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = doc/doxygen-user.cfg src/config-common.h \
	share/otf2/__version__.py doc/doxygen-user/main.dox \
	src/tools/otf2_template/otf2-template \
	include/otf2/OTF2_ErrorCodes.h otf2-mini-config.sh
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(otf2pythonpkgdatadir)" \
	"$(DESTDIR)$(otf2pythonpkgdatadir)" "$(DESTDIR)$(examplesdir)" \
	"$(DESTDIR)$(docdir)" "$(DESTDIR)$(micpkgdatadir)" \
	"$(DESTDIR)$(otf2pythonpkgdatadir)" "$(DESTDIR)$(pkgdatadir)" \
	"$(DESTDIR)$(otf2includedir)" "$(DESTDIR)$(otf2includedir)"
SCRIPTS = $(nodist_bin_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @$(am__tty_colors); echo "  GEN      $${mgn}$@$$std";
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__py_compile = PYTHON=$(PYTHON) $(SHELL) $(py_compile)
am__pep3147_tweak = \
  sed -e 's|\.py$$||' -e 's|[^/]*$$|__pycache__/&.*.py|'
py_compile = $(top_srcdir)/build-config/py-compile
AM_V_pyc = $(am__v_pyc_@AM_V@)
am__v_pyc_ = $(am__v_pyc_@AM_DEFAULT_V@)
am__v_pyc_0 = --silent
am__v_pyc_1 = 
DATA = $(dist_examples_DATA) $(doc_DATA) $(micpkgdata_DATA) \
	$(noinst_DATA) $(otf2pythonpkgdata_DATA) $(pkgdata_DATA)
HEADERS = $(nodist_otf2include_HEADERS) $(otf2include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope check recheck distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = .test
am__test_logs1 = $(TESTS:=.log)
TEST_LOGS = $(am__test_logs1:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
pkglibexecdir = @pkglibexecdir@
ACLOCAL = @ACLOCAL@
AFS_PACKAGE_NAME = @AFS_PACKAGE_NAME@
AFS_PACKAGE_name = @AFS_PACKAGE_name@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DOXYGEN = @DOXYGEN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBOBJS = @LIBOBJS@
LIBRARY_AGE = @LIBRARY_AGE@
LIBRARY_CURRENT = @LIBRARY_CURRENT@
LIBRARY_REVISION = @LIBRARY_REVISION@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
PACKAGE = @PACKAGE@
PACKAGE_BUGFIX = @PACKAGE_BUGFIX@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_MAJOR = @PACKAGE_MAJOR@
PACKAGE_MINOR = @PACKAGE_MINOR@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_SUFFIX = @PACKAGE_SUFFIX@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PYTHON = $(PYTHON_FOR_GENERATOR)
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_FOR_GENERATOR = @PYTHON_FOR_GENERATOR@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SPHINX = @SPHINX@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_scorep_doxygen_distdir = @ac_scorep_doxygen_distdir@
ac_scorep_have_uncrustify = @ac_scorep_have_uncrustify@
afs_srcdir = @afs_srcdir@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
ax_config_subdirs = @ax_config_subdirs@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
has_CC = @has_CC@
has_cc = @has_cc@
has_ftn = @has_ftn@
have_dot = @have_dot@
have_doxygen_latex = @have_doxygen_latex@
have_makeindex = @have_makeindex@
have_pdflatex = @have_pdflatex@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = . $(subdirs) $(ax_config_subdirs)
ACLOCAL_AMFLAGS = -I build-config/m4 -I build-config/common/m4
CLEAN_LOCAL = $(am__append_6)
CHECK_LOCAL = 
DIST_HOOK = dist-check-template-sigs dist-touch-template-outputs \
	$(am__append_4) $(am__append_7)

# Testing framework
EXTRA_DIST = $(srcdir)/build-config/common/generate-config-backend-for-frontend.sh \
	$(srcdir)/build-config/common/generate-library-dependencies.sh \
	$(srcdir)/build-config/common/generate-library-dependencies-la-object.hpp \
	$(srcdir)/build-config/common/generate-library-version.sh \
	$(srcdir)/build-config/common/generate-package-version.sh \
	$(srcdir)/common/utils/test/cutest/CuTest.c \
	$(srcdir)/common/utils/test/cutest/CuTest.h \
	$(srcdir)/common/utils/test/cutest/license.txt \
	$(srcdir)/common/utils/test/cutest/README.txt \
	$(srcdir)/build-config/common/process_arguments.awk \
	$(srcdir)/build-config/common/platforms/compiler-frontend-gcc \
	$(srcdir)/build-config/common/platforms/compiler-frontend-ibm \
	$(srcdir)/build-config/common/platforms/compiler-frontend-intel \
	$(srcdir)/build-config/common/platforms/compiler-frontend-pgi \
	$(srcdir)/build-config/common/platforms/compiler-frontend-studio \
	$(srcdir)/build-config/common/platforms/compiler-frontend-clang \
	$(srcdir)/build-config/common/platforms/compiler-frontend-aocc \
	$(srcdir)/build-config/common/platforms/compiler-mpi-bullxmpi \
	$(srcdir)/build-config/common/platforms/compiler-mpi-hp \
	$(srcdir)/build-config/common/platforms/compiler-mpi-ibmpoe \
	$(srcdir)/build-config/common/platforms/compiler-mpi-intel \
	$(srcdir)/build-config/common/platforms/compiler-mpi-intel2 \
	$(srcdir)/build-config/common/platforms/compiler-mpi-intel3 \
	$(srcdir)/build-config/common/platforms/compiler-mpi-intelpoe \
	$(srcdir)/build-config/common/platforms/compiler-mpi-lam \
	$(srcdir)/build-config/common/platforms/compiler-mpi-mpibull2 \
	$(srcdir)/build-config/common/platforms/compiler-mpi-mpich \
	$(srcdir)/build-config/common/platforms/compiler-mpi-mpich2 \
	$(srcdir)/build-config/common/platforms/compiler-mpi-mpich3 \
	$(srcdir)/build-config/common/platforms/compiler-mpi-openmpi \
	$(srcdir)/build-config/common/platforms/compiler-mpi-openmpi3 \
	$(srcdir)/build-config/common/platforms/compiler-mpi-platform \
	$(srcdir)/build-config/common/platforms/compiler-mpi-scali \
	$(srcdir)/build-config/common/platforms/compiler-mpi-sgimpt \
	$(srcdir)/build-config/common/platforms/compiler-mpi-sgimptwrapper \
	$(srcdir)/build-config/common/platforms/compiler-mpi-spectrum \
	$(srcdir)/build-config/common/platforms/compiler-mpi-sun \
	$(srcdir)/build-config/common/platforms/compiler-mpi-without \
	$(srcdir)/build-config/common/platforms/compiler-shmem-openmpi \
	$(srcdir)/build-config/common/platforms/compiler-shmem-openmpi3 \
	$(srcdir)/build-config/common/platforms/compiler-shmem-openshmem \
	$(srcdir)/build-config/common/platforms/compiler-shmem-sgimpt \
	$(srcdir)/build-config/common/platforms/compiler-shmem-sgimptwrapper \
	$(srcdir)/build-config/common/platforms/compiler-shmem-spectrum \
	$(srcdir)/build-config/common/platforms/compiler-shmem-without \
	$(srcdir)/build-config/common/platforms/compiler-nocross-gcc \
	$(srcdir)/build-config/common/platforms/compiler-nocross-ibm \
	$(srcdir)/build-config/common/platforms/compiler-nocross-intel \
	$(srcdir)/build-config/common/platforms/compiler-nocross-pgi \
	$(srcdir)/build-config/common/platforms/compiler-nocross-studio \
	$(srcdir)/build-config/common/platforms/compiler-nocross-clang \
	$(srcdir)/build-config/common/platforms/compiler-nocross-aocc \
	$(srcdir)/build-config/common/platforms/platform-backend-altix \
	$(srcdir)/build-config/common/platforms/platform-backend-bgl \
	$(srcdir)/build-config/common/platforms/platform-backend-bgp \
	$(srcdir)/build-config/common/platforms/platform-backend-bgq \
	$(srcdir)/build-config/common/platforms/platform-backend-crayxt \
	$(srcdir)/build-config/common/platforms/platform-backend-crayxe \
	$(srcdir)/build-config/common/platforms/platform-backend-crayxk \
	$(srcdir)/build-config/common/platforms/platform-backend-crayxc \
	$(srcdir)/build-config/common/platforms/platform-backend-crayunknown \
	$(srcdir)/build-config/common/platforms/platform-backend-aix \
	$(srcdir)/build-config/common/platforms/platform-backend-linux \
	$(srcdir)/build-config/common/platforms/platform-backend-mac \
	$(srcdir)/build-config/common/platforms/platform-backend-mic \
	$(srcdir)/build-config/common/platforms/platform-backend-mingw \
	$(srcdir)/build-config/common/platforms/platform-backend-necsx \
	$(srcdir)/build-config/common/platforms/platform-backend-solaris \
	$(srcdir)/build-config/common/platforms/platform-backend-k \
	$(srcdir)/build-config/common/platforms/platform-backend-fx10 \
	$(srcdir)/build-config/common/platforms/platform-backend-fx100 \
	$(srcdir)/build-config/common/platforms/platform-backend-user-provided \
	$(srcdir)/build-config/common/platforms/platform-frontend-altix \
	$(srcdir)/build-config/common/platforms/platform-frontend-bgl \
	$(srcdir)/build-config/common/platforms/platform-frontend-bgp \
	$(srcdir)/build-config/common/platforms/platform-frontend-bgq \
	$(srcdir)/build-config/common/platforms/platform-frontend-crayxt \
	$(srcdir)/build-config/common/platforms/platform-frontend-crayxe \
	$(srcdir)/build-config/common/platforms/platform-frontend-crayxk \
	$(srcdir)/build-config/common/platforms/platform-frontend-crayxc \
	$(srcdir)/build-config/common/platforms/platform-frontend-crayunknown \
	$(srcdir)/build-config/common/platforms/platform-frontend-aix \
	$(srcdir)/build-config/common/platforms/platform-frontend-linux \
	$(srcdir)/build-config/common/platforms/platform-frontend-mac \
	$(srcdir)/build-config/common/platforms/platform-frontend-mic \
	$(srcdir)/build-config/common/platforms/platform-frontend-mingw \
	$(srcdir)/build-config/common/platforms/platform-frontend-necsx \
	$(srcdir)/build-config/common/platforms/platform-frontend-solaris \
	$(srcdir)/build-config/common/platforms/platform-frontend-k \
	$(srcdir)/build-config/common/platforms/platform-frontend-fx10 \
	$(srcdir)/build-config/common/platforms/platform-frontend-fx100 \
	$(srcdir)/build-config/common/platforms/platform-frontend-user-provided \
	$(srcdir)/build-config/common/platforms/platform-mpi-altix \
	$(srcdir)/build-config/common/platforms/platform-mpi-bgl \
	$(srcdir)/build-config/common/platforms/platform-mpi-bgp \
	$(srcdir)/build-config/common/platforms/platform-mpi-bgq \
	$(srcdir)/build-config/common/platforms/platform-mpi-crayxt \
	$(srcdir)/build-config/common/platforms/platform-mpi-crayxe \
	$(srcdir)/build-config/common/platforms/platform-mpi-crayxk \
	$(srcdir)/build-config/common/platforms/platform-mpi-crayxc \
	$(srcdir)/build-config/common/platforms/platform-mpi-crayunknown \
	$(srcdir)/build-config/common/platforms/platform-mpi-aix \
	$(srcdir)/build-config/common/platforms/platform-mpi-linux \
	$(srcdir)/build-config/common/platforms/platform-mpi-mac \
	$(srcdir)/build-config/common/platforms/platform-mpi-mic \
	$(srcdir)/build-config/common/platforms/platform-mpi-necsx \
	$(srcdir)/build-config/common/platforms/platform-mpi-solaris \
	$(srcdir)/build-config/common/platforms/platform-shmem-crayxk \
	$(srcdir)/build-config/common/platforms/platform-shmem-crayxe \
	$(srcdir)/build-config/common/platforms/platform-shmem-crayxt \
	$(srcdir)/build-config/common/platforms/platform-shmem-crayxc \
	$(srcdir)/build-config/common/platforms/platform-shmem-crayunknown \
	$(srcdir)/build-config/common/platforms/platform-shmem-user-provided \
	$(srcdir)/build-config/common/platforms/platform-mpi-k \
	$(srcdir)/build-config/common/platforms/platform-mpi-fx10 \
	$(srcdir)/build-config/common/platforms/platform-mpi-fx100 \
	$(srcdir)/build-config/common/platforms/platform-mpi-user-provided \
	$(srcdir)/src/config.h $(srcdir)/src/config-custom.h \
	$(srcdir)/otf2-mini-config.sh.in \
	$(srcdir)/otf2-mini-config-data.sh.in \
	$(srcdir)/doc/doxygen-user/A1_installation.dox \
	$(srcdir)/doc/doxygen-user/A2_io.dox \
	$(srcdir)/doc/doxygen-user/definitions.dox \
	$(srcdir)/doc/doxygen-user/events.dox \
	$(srcdir)/doc/doxygen-user/snaps.dox \
	$(srcdir)/doc/doxygen-user/markers.dox \
	$(srcdir)/doc/doxygen-user/otf2_config_usage.dox.in \
	$(srcdir)/doc/doxygen-user/otf2_print_usage.dox.in \
	$(srcdir)/doc/doxygen-user/otf2_marker_usage.dox.in \
	$(srcdir)/doc/doxygen-user/otf2_snapshots_usage.dox.in \
	$(srcdir)/doc/doxygen-user/otf2_estimator_usage.dox.in \
	$(srcdir)/OPEN_ISSUES $(srcdir)/THANKS $(am__append_2) \
	$(otf2pythonpkgdata_DATA) $(otf2pythonpkgdata_PYTHON) \
	$(srcdir)/share/otf2/otf2.errors \
	$(SRC_ROOT)src/tools/otf2_template/otf2_template.py \
	$(srcdir)/templates/HACKING.md \
	$(srcdir)/templates/Makefile.inc.tmpl.am \
	$(srcdir)/templates/sig.py $(srcdir)/templates/remake.py \
	$(srcdir)/templates/templates.py \
	$(srcdir)/templates/example.cc $(template_targets) \
	$(template_sigs) $(SRC_ROOT)contrib-build-vs/Readme.txt \
	$(SRC_ROOT)contrib-build-vs/OTF2.vcxproj \
	$(SRC_ROOT)contrib-build-vs/otf2/OTF2_ErrorCodes.h \
	$(SRC_ROOT)contrib-build-vs/config-backend.h \
	$(SRC_ROOT)contrib-build-vs/otf2_error_decls.gen.h
BUILT_SOURCES = otf2-mini-config.sh src/otf2_print_usage.h \
	src/otf2_config_usage.h src/otf2_snapshots_usage.h \
	src/otf2_estimator_usage.h src/otf2_marker_usage.h \
	include/otf2/OTF2_ErrorCodes.h src/otf2_error_decls.gen.h \
	$(template_sources)
CLEANFILES = $(builddir)/user_provided_configure_args \
	$(builddir)/mpi_compiler_suite \
	$(builddir)/mpi_compiler_suite_to_source \
	src/otf2_print_usage.h src/otf2_config_usage.h \
	src/otf2_snapshots_usage.h src/otf2_estimator_usage.h \
	src/otf2_marker_usage.h $(am__append_5) $(am__append_8) \
	$(am__append_9)
DISTCLEANFILES = $(builddir)/config.summary \
	$(builddir)/@PACKAGE@.summary include/otf2/OTF2_ErrorCodes.h \
	src/otf2_error_decls.gen.h
CONFIG_STATUS_DEPENDENCIES = $(srcdir)/build-config/VERSION
CONFIGURE_DEPENDENCIES = $(srcdir)/build-config/VERSION
SCOREP_RECURSIVE_TARGETS = $(am__append_1) check-build-recursive
doc_DATA = $(srcdir)/OPEN_ISSUES \
           $(srcdir)/ChangeLog

nodist_bin_SCRIPTS = $(am__append_3)
pkgdata_DATA = @PACKAGE@.summary
noinst_DATA = 
otf2includedir = $(includedir)/otf2
otf2include_HEADERS = \
    $(srcdir)/include/otf2/otf2.h                                  \
\
    $(srcdir)/include/otf2/OTF2_GeneralDefinitions.h               \
    $(srcdir)/include/otf2/OTF2_Events.h                           \
    $(srcdir)/include/otf2/OTF2_Definitions.h                      \
\
    $(srcdir)/include/otf2/OTF2_AttributeValue.h                   \
    $(srcdir)/include/otf2/OTF2_AttributeList.h                    \
    $(srcdir)/include/otf2/OTF2_IdMap.h                            \
\
    $(srcdir)/include/otf2/OTF2_Archive.h                          \
    $(srcdir)/include/otf2/OTF2_Callbacks.h                        \
\
    $(srcdir)/include/otf2/OTF2_Reader.h                           \
\
    $(srcdir)/include/otf2/OTF2_EvtWriter.h                        \
\
    $(srcdir)/include/otf2/OTF2_GlobalDefWriter.h                  \
\
    $(srcdir)/include/otf2/OTF2_DefWriter.h                        \
\
    $(srcdir)/include/otf2/OTF2_GlobalEvtReader.h                  \
    $(srcdir)/include/otf2/OTF2_GlobalEvtReaderCallbacks.h         \
\
    $(srcdir)/include/otf2/OTF2_EvtReader.h                        \
    $(srcdir)/include/otf2/OTF2_EvtReaderCallbacks.h               \
\
    $(srcdir)/include/otf2/OTF2_GlobalDefReader.h                  \
    $(srcdir)/include/otf2/OTF2_GlobalDefReaderCallbacks.h         \
\
    $(srcdir)/include/otf2/OTF2_DefReader.h                        \
    $(srcdir)/include/otf2/OTF2_DefReaderCallbacks.h               \
\
    $(srcdir)/include/otf2/OTF2_SnapWriter.h                       \
\
    $(srcdir)/include/otf2/OTF2_SnapReader.h                       \
    $(srcdir)/include/otf2/OTF2_SnapReaderCallbacks.h              \
\
    $(srcdir)/include/otf2/OTF2_GlobalSnapReader.h                 \
    $(srcdir)/include/otf2/OTF2_GlobalSnapReaderCallbacks.h        \
\
    $(srcdir)/include/otf2/OTF2_Thumbnail.h                        \
\
    $(srcdir)/include/otf2/OTF2_Marker.h                           \
    $(srcdir)/include/otf2/OTF2_MarkerReader.h                     \
    $(srcdir)/include/otf2/OTF2_MarkerReaderCallbacks.h            \
    $(srcdir)/include/otf2/OTF2_MarkerWriter.h \
\
    $(srcdir)/include/otf2/OTF2_EventSizeEstimator.h \
\
    $(srcdir)/include/otf2/OTF2_MPI_Collectives.h \
    $(srcdir)/include/otf2/OTF2_OpenMP_Locks.h \
    $(srcdir)/include/otf2/OTF2_Pthread_Locks.h

nodist_otf2include_HEADERS = \
    include/otf2/OTF2_ErrorCodes.h

otf2pythonpkgdatadir = $(pkgdatadir)/python/otf2
otf2pythonpkgdata_DATA = $(srcdir)/share/otf2/otf2.types \
                         $(srcdir)/share/otf2/otf2.enums \
                         $(srcdir)/share/otf2/otf2.defs \
                         $(srcdir)/share/otf2/otf2.events \
                         $(srcdir)/share/otf2/otf2.snaps

otf2pythonpkgdata_PYTHON = $(srcdir)/share/otf2/__init__.py
nodist_otf2pythonpkgdata_PYTHON = $(builddir)/share/otf2/__version__.py
template_sources = $(srcdir)/include/otf2/OTF2_GeneralDefinitions.h \
	$(srcdir)/include/otf2/OTF2_Definitions.h \
	$(srcdir)/src/otf2_file_types.h \
	$(srcdir)/include/otf2/OTF2_Events.h \
	$(srcdir)/src/otf2_events_int.h \
	$(srcdir)/include/otf2/OTF2_EvtReaderCallbacks.h \
	$(srcdir)/src/OTF2_EvtReader_inc.c \
	$(srcdir)/include/otf2/OTF2_EvtWriter.h \
	$(srcdir)/src/OTF2_EvtWriter_inc.c \
	$(srcdir)/include/otf2/OTF2_GlobalEvtReaderCallbacks.h \
	$(srcdir)/include/otf2/OTF2_GlobalSnapReaderCallbacks.h \
	$(srcdir)/src/OTF2_GlobalEvtReader_inc.c \
	$(srcdir)/src/OTF2_GlobalSnapReader_inc.c \
	$(srcdir)/src/otf2_local_definitions.h \
	$(srcdir)/include/otf2/OTF2_DefReaderCallbacks.h \
	$(srcdir)/src/OTF2_DefReader_inc.c \
	$(srcdir)/include/otf2/OTF2_DefWriter.h \
	$(srcdir)/src/OTF2_DefWriter_inc.c \
	$(srcdir)/src/otf2_global_definitions.h \
	$(srcdir)/include/otf2/OTF2_GlobalDefReaderCallbacks.h \
	$(srcdir)/src/OTF2_GlobalDefReader_inc.c \
	$(srcdir)/include/otf2/OTF2_GlobalDefWriter.h \
	$(srcdir)/src/OTF2_GlobalDefWriter_inc.c \
	$(srcdir)/src/otf2_snaps.h \
	$(srcdir)/include/otf2/OTF2_SnapReaderCallbacks.h \
	$(srcdir)/src/OTF2_SnapReader_inc.c \
	$(srcdir)/include/otf2/OTF2_SnapWriter.h \
	$(srcdir)/src/OTF2_SnapWriter_inc.c \
	$(srcdir)/src/tools/otf2_print/otf2_print_inc.c \
	$(srcdir)/src/tools/otf2_print/otf2_print_types.h \
	$(srcdir)/src/tools/otf2_snapshots/otf2_snapshots_events.hpp \
	$(srcdir)/src/tools/otf2_snapshots/otf2_snapshots_events_inc.cpp \
	$(srcdir)/src/tools/otf2_snapshots/otf2_snapshots_callbacks_inc.cpp \
	$(srcdir)/src/otf2_attribute_value_inc.c \
	$(srcdir)/include/otf2/OTF2_AttributeValue.h \
	$(srcdir)/src/otf2_attribute_list_inc.c \
	$(srcdir)/include/otf2/OTF2_AttributeList.h \
	$(srcdir)/src/otf2_attic_types.h \
	$(srcdir)/doc/doxygen-user/definitions.dox \
	$(srcdir)/doc/doxygen-user/events.dox \
	$(srcdir)/doc/doxygen-user/snaps.dox \
	$(srcdir)/templates/example.cc \
	$(srcdir)/include/otf2/OTF2_EventSizeEstimator.h \
	$(srcdir)/src/OTF2_EventSizeEstimator.c \
	$(srcdir)/src/tools/otf2_estimator/otf2_estimator_inc.cpp \
	$(srcdir)/src/python/_otf2/Definitions.py \
	$(srcdir)/src/python/_otf2/Events.py \
	$(srcdir)/src/python/_otf2/GeneralDefinitions.py \
	$(srcdir)/src/python/_otf2/GlobalDefReaderCallbacks.py \
	$(srcdir)/src/python/_otf2/DefReaderCallbacks.py \
	$(srcdir)/src/python/_otf2/EvtReaderCallbacks.py \
	$(srcdir)/src/python/_otf2/GlobalEvtReaderCallbacks.py \
	$(srcdir)/src/python/_otf2/GlobalSnapReaderCallbacks.py \
	$(srcdir)/src/python/_otf2/SnapReaderCallbacks.py \
	$(srcdir)/src/python/_otf2/EvtWriter.py \
	$(srcdir)/src/python/_otf2/DefWriter.py \
	$(srcdir)/src/python/_otf2/GlobalDefWriter.py \
	$(srcdir)/src/python/_otf2/SnapWriter.py \
	$(srcdir)/src/python/_otf2/AttributeList.py \
	$(srcdir)/src/python/_otf2/EventSizeEstimator.py \
	$(srcdir)/src/python/_otf2/AttributeValue.py \
	$(srcdir)/src/python/otf2/events.py \
	$(srcdir)/src/python/otf2/event_reader.py \
	$(srcdir)/src/python/otf2/event_writer.py \
	$(srcdir)/src/python/otf2/registry.py \
	$(srcdir)/src/python/otf2/definition_writer.py \
	$(srcdir)/src/python/otf2/enums.py \
	$(srcdir)/src/python/otf2/attribute_value.py
template_targets = $(srcdir)/templates/OTF2_GeneralDefinitions.tmpl.h \
	$(srcdir)/templates/OTF2_Definitions.tmpl.h \
	$(srcdir)/templates/otf2_file_types.tmpl.h \
	$(srcdir)/templates/OTF2_Events.tmpl.h \
	$(srcdir)/templates/otf2_events_int.tmpl.h \
	$(srcdir)/templates/OTF2_EvtReaderCallbacks.tmpl.h \
	$(srcdir)/templates/OTF2_EvtReader_inc.tmpl.c \
	$(srcdir)/templates/OTF2_EvtWriter.tmpl.h \
	$(srcdir)/templates/OTF2_EvtWriter_inc.tmpl.c \
	$(srcdir)/templates/OTF2_GlobalEvtReaderCallbacks.tmpl.h \
	$(srcdir)/templates/OTF2_GlobalSnapReaderCallbacks.tmpl.h \
	$(srcdir)/templates/OTF2_GlobalEvtReader_inc.tmpl.c \
	$(srcdir)/templates/OTF2_GlobalSnapReader_inc.tmpl.c \
	$(srcdir)/templates/otf2_local_definitions.tmpl.h \
	$(srcdir)/templates/OTF2_DefReaderCallbacks.tmpl.h \
	$(srcdir)/templates/OTF2_DefReader_inc.tmpl.c \
	$(srcdir)/templates/OTF2_DefWriter.tmpl.h \
	$(srcdir)/templates/OTF2_DefWriter_inc.tmpl.c \
	$(srcdir)/templates/otf2_global_definitions.tmpl.h \
	$(srcdir)/templates/OTF2_GlobalDefReaderCallbacks.tmpl.h \
	$(srcdir)/templates/OTF2_GlobalDefReader_inc.tmpl.c \
	$(srcdir)/templates/OTF2_GlobalDefWriter.tmpl.h \
	$(srcdir)/templates/OTF2_GlobalDefWriter_inc.tmpl.c \
	$(srcdir)/templates/otf2_snaps.tmpl.h \
	$(srcdir)/templates/OTF2_SnapReaderCallbacks.tmpl.h \
	$(srcdir)/templates/OTF2_SnapReader_inc.tmpl.c \
	$(srcdir)/templates/OTF2_SnapWriter.tmpl.h \
	$(srcdir)/templates/OTF2_SnapWriter_inc.tmpl.c \
	$(srcdir)/templates/otf2_print_inc.tmpl.c \
	$(srcdir)/templates/otf2_print_types.tmpl.h \
	$(srcdir)/templates/otf2_snapshots_events.tmpl.hpp \
	$(srcdir)/templates/otf2_snapshots_events_inc.tmpl.cpp \
	$(srcdir)/templates/otf2_snapshots_callbacks_inc.tmpl.cpp \
	$(srcdir)/templates/otf2_attribute_value_inc.tmpl.c \
	$(srcdir)/templates/OTF2_AttributeValue.tmpl.h \
	$(srcdir)/templates/otf2_attribute_list_inc.tmpl.c \
	$(srcdir)/templates/OTF2_AttributeList.tmpl.h \
	$(srcdir)/templates/otf2_attic_types.tmpl.h \
	$(srcdir)/templates/definitions.tmpl.dox \
	$(srcdir)/templates/events.tmpl.dox \
	$(srcdir)/templates/snaps.tmpl.dox \
	$(srcdir)/templates/example.tmpl.cc \
	$(srcdir)/templates/OTF2_EventSizeEstimator.tmpl.h \
	$(srcdir)/templates/OTF2_EventSizeEstimator.tmpl.c \
	$(srcdir)/templates/otf2_estimator_inc.tmpl.cpp \
	$(srcdir)/templates/_otf2.Definitions.tmpl.py \
	$(srcdir)/templates/_otf2.Events.tmpl.py \
	$(srcdir)/templates/_otf2.GeneralDefinitions.tmpl.py \
	$(srcdir)/templates/_otf2.GlobalDefReaderCallbacks.tmpl.py \
	$(srcdir)/templates/_otf2.DefReaderCallbacks.tmpl.py \
	$(srcdir)/templates/_otf2.EvtReaderCallbacks.tmpl.py \
	$(srcdir)/templates/_otf2.GlobalEvtReaderCallbacks.tmpl.py \
	$(srcdir)/templates/_otf2.GlobalSnapReaderCallbacks.tmpl.py \
	$(srcdir)/templates/_otf2.SnapReaderCallbacks.tmpl.py \
	$(srcdir)/templates/_otf2.EvtWriter.tmpl.py \
	$(srcdir)/templates/_otf2.DefWriter.tmpl.py \
	$(srcdir)/templates/_otf2.GlobalDefWriter.tmpl.py \
	$(srcdir)/templates/_otf2.SnapWriter.tmpl.py \
	$(srcdir)/templates/_otf2.AttributeList.tmpl.py \
	$(srcdir)/templates/_otf2.EventSizeEstimator.tmpl.py \
	$(srcdir)/templates/_otf2.AttributeValue.tmpl.py \
	$(srcdir)/templates/otf2.events.tmpl.py \
	$(srcdir)/templates/otf2.event_reader.tmpl.py \
	$(srcdir)/templates/otf2.event_writer.tmpl.py \
	$(srcdir)/templates/otf2.registry.tmpl.py \
	$(srcdir)/templates/otf2.definition_writer.tmpl.py \
	$(srcdir)/templates/otf2.enums.tmpl.py \
	$(srcdir)/templates/otf2.attribute_value.tmpl.py
template_sigs =  \
	$(srcdir)/templates/OTF2_GeneralDefinitions.tmpl.h.sig \
	$(srcdir)/templates/OTF2_Definitions.tmpl.h.sig \
	$(srcdir)/templates/otf2_file_types.tmpl.h.sig \
	$(srcdir)/templates/OTF2_Events.tmpl.h.sig \
	$(srcdir)/templates/otf2_events_int.tmpl.h.sig \
	$(srcdir)/templates/OTF2_EvtReaderCallbacks.tmpl.h.sig \
	$(srcdir)/templates/OTF2_EvtReader_inc.tmpl.c.sig \
	$(srcdir)/templates/OTF2_EvtWriter.tmpl.h.sig \
	$(srcdir)/templates/OTF2_EvtWriter_inc.tmpl.c.sig \
	$(srcdir)/templates/OTF2_GlobalEvtReaderCallbacks.tmpl.h.sig \
	$(srcdir)/templates/OTF2_GlobalSnapReaderCallbacks.tmpl.h.sig \
	$(srcdir)/templates/OTF2_GlobalEvtReader_inc.tmpl.c.sig \
	$(srcdir)/templates/OTF2_GlobalSnapReader_inc.tmpl.c.sig \
	$(srcdir)/templates/otf2_local_definitions.tmpl.h.sig \
	$(srcdir)/templates/OTF2_DefReaderCallbacks.tmpl.h.sig \
	$(srcdir)/templates/OTF2_DefReader_inc.tmpl.c.sig \
	$(srcdir)/templates/OTF2_DefWriter.tmpl.h.sig \
	$(srcdir)/templates/OTF2_DefWriter_inc.tmpl.c.sig \
	$(srcdir)/templates/otf2_global_definitions.tmpl.h.sig \
	$(srcdir)/templates/OTF2_GlobalDefReaderCallbacks.tmpl.h.sig \
	$(srcdir)/templates/OTF2_GlobalDefReader_inc.tmpl.c.sig \
	$(srcdir)/templates/OTF2_GlobalDefWriter.tmpl.h.sig \
	$(srcdir)/templates/OTF2_GlobalDefWriter_inc.tmpl.c.sig \
	$(srcdir)/templates/otf2_snaps.tmpl.h.sig \
	$(srcdir)/templates/OTF2_SnapReaderCallbacks.tmpl.h.sig \
	$(srcdir)/templates/OTF2_SnapReader_inc.tmpl.c.sig \
	$(srcdir)/templates/OTF2_SnapWriter.tmpl.h.sig \
	$(srcdir)/templates/OTF2_SnapWriter_inc.tmpl.c.sig \
	$(srcdir)/templates/otf2_print_inc.tmpl.c.sig \
	$(srcdir)/templates/otf2_print_types.tmpl.h.sig \
	$(srcdir)/templates/otf2_snapshots_events.tmpl.hpp.sig \
	$(srcdir)/templates/otf2_snapshots_events_inc.tmpl.cpp.sig \
	$(srcdir)/templates/otf2_snapshots_callbacks_inc.tmpl.cpp.sig \
	$(srcdir)/templates/otf2_attribute_value_inc.tmpl.c.sig \
	$(srcdir)/templates/OTF2_AttributeValue.tmpl.h.sig \
	$(srcdir)/templates/otf2_attribute_list_inc.tmpl.c.sig \
	$(srcdir)/templates/OTF2_AttributeList.tmpl.h.sig \
	$(srcdir)/templates/otf2_attic_types.tmpl.h.sig \
	$(srcdir)/templates/definitions.tmpl.dox.sig \
	$(srcdir)/templates/events.tmpl.dox.sig \
	$(srcdir)/templates/snaps.tmpl.dox.sig \
	$(srcdir)/templates/example.tmpl.cc.sig \
	$(srcdir)/templates/OTF2_EventSizeEstimator.tmpl.h.sig \
	$(srcdir)/templates/OTF2_EventSizeEstimator.tmpl.c.sig \
	$(srcdir)/templates/otf2_estimator_inc.tmpl.cpp.sig \
	$(srcdir)/templates/_otf2.Definitions.tmpl.py.sig \
	$(srcdir)/templates/_otf2.Events.tmpl.py.sig \
	$(srcdir)/templates/_otf2.GeneralDefinitions.tmpl.py.sig \
	$(srcdir)/templates/_otf2.GlobalDefReaderCallbacks.tmpl.py.sig \
	$(srcdir)/templates/_otf2.DefReaderCallbacks.tmpl.py.sig \
	$(srcdir)/templates/_otf2.EvtReaderCallbacks.tmpl.py.sig \
	$(srcdir)/templates/_otf2.GlobalEvtReaderCallbacks.tmpl.py.sig \
	$(srcdir)/templates/_otf2.GlobalSnapReaderCallbacks.tmpl.py.sig \
	$(srcdir)/templates/_otf2.SnapReaderCallbacks.tmpl.py.sig \
	$(srcdir)/templates/_otf2.EvtWriter.tmpl.py.sig \
	$(srcdir)/templates/_otf2.DefWriter.tmpl.py.sig \
	$(srcdir)/templates/_otf2.GlobalDefWriter.tmpl.py.sig \
	$(srcdir)/templates/_otf2.SnapWriter.tmpl.py.sig \
	$(srcdir)/templates/_otf2.AttributeList.tmpl.py.sig \
	$(srcdir)/templates/_otf2.EventSizeEstimator.tmpl.py.sig \
	$(srcdir)/templates/_otf2.AttributeValue.tmpl.py.sig \
	$(srcdir)/templates/otf2.events.tmpl.py.sig \
	$(srcdir)/templates/otf2.event_reader.tmpl.py.sig \
	$(srcdir)/templates/otf2.event_writer.tmpl.py.sig \
	$(srcdir)/templates/otf2.registry.tmpl.py.sig \
	$(srcdir)/templates/otf2.definition_writer.tmpl.py.sig \
	$(srcdir)/templates/otf2.enums.tmpl.py.sig \
	$(srcdir)/templates/otf2.attribute_value.tmpl.py.sig

# from automake/lib/am/check.am
# need magenta color for warnings, but still recognizes $AM_COLOR_TESTS
#
# If stdout is a non-dumb tty, use colors.  If test -t is not supported,
# then this fails; a conservative approach.  Of course do not redirect
# stdout here, just stderr.
otf2__tty_colors = \
red=; mag=; blu=; std=; \
test "X$(AM_COLOR_TESTS)" != Xno \
&& test "X$$TERM" != Xdumb \
&& { test "X$(AM_COLOR_TESTS)" = Xalways || test -t 1 2>/dev/null; } \
&& { \
  red='[0;31m'; \
  mag='[1;35m'; \
  blu='[1;34m'; \
  std='[m'; \
}

GEN.sig = $(PYTHON) sig.py
@HAVE_PYTHON_FOR_GENERATOR_TRUE@GEN.tmpl.cmd = $(PYTHON) $(srcdir)/src/tools/otf2_template/otf2_template.py
DOC_SRC_DIR = $(srcdir)/doc
@GIT_CONTROLLED_TRUE@USER_DOC_DIR = $(top_distdir)$(ac_scorep_doxygen_distdir)/doc
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@OTF2_V_DOXYGEN = $(otf2__v_DOXYGEN_@AM_V@)
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@otf2__v_DOXYGEN_ = $(otf2__v_DOXYGEN_@AM_DEFAULT_V@)
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@otf2__v_DOXYGEN_0 = @$(am__tty_colors); echo "  DOXYGEN  $${blu}$@$$std";
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@otf2__v_DOXYGEN_1 = 
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@OTF2_V_DEVNULL = $(otf2__v_DEVNULL_@AM_V@)
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@otf2__v_DEVNULL_ = $(otf2__v_DEVNULL_@AM_DEFAULT_V@)
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@otf2__v_DEVNULL_0 = >/dev/null
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@otf2__v_DEVNULL_1 = 
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@OTF2_V_pdflatex = $(otf2__v_pdflatex_@AM_V@)
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@otf2__v_pdflatex_ = $(otf2__v_pdflatex_@AM_DEFAULT_V@)
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@otf2__v_pdflatex_0 = -interaction batchmode
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@otf2__v_pdflatex_1 = -interaction nonstopmode
examplesdir = $(docdir)/examples
dist_examples_DATA = \
    doc/examples/Makefile \
    doc/examples/otf2_reader_example.c \
    doc/examples/otf2_writer_example.c \
    doc/examples/otf2_mpi_reader_example.c \
    doc/examples/otf2_mpi_reader_example.cc \
    doc/examples/otf2_mpi_writer_example.c \
    doc/examples/otf2_openmp_writer_example.c \
    doc/examples/otf2_pthread_writer_example.c \
    doc/examples/otf2_high_level_reader_example.py \
    doc/examples/otf2_high_level_writer_example.py


# On MIC, install config.summary also in $pkgdatadir/mic
@PLATFORM_MIC_TRUE@micpkgdatadir = $(pkgdatadir)/mic
@PLATFORM_MIC_TRUE@micpkgdata_DATA = @PACKAGE@.summary
@PLATFORM_MIC_FALSE@TARGETS = mic
all: $(BUILT_SOURCES)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .log .test .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/build-config/common/Makefile.inc.am $(srcdir)/build-config/common/platforms.am $(srcdir)/include/otf2/Makefile.inc.am $(srcdir)/share/Makefile.inc.am $(srcdir)/src/tools/otf2_template/Makefile.inc.am $(srcdir)/templates/Makefile.inc.am $(srcdir)/doc/Makefile.inc.am $(srcdir)/doc/examples/Makefile.inc.am $(srcdir)/contrib-build-vs/Makefile.inc.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      if $(AM_V_P); then echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; fi; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	if $(AM_V_P); then echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; fi; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    if $(AM_V_P); then echo ' $(SHELL) ./config.status'; fi; \
	    $(SHELL) ./config.status;; \
	  *) \
	    if $(AM_V_P); then echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; fi; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/build-config/common/Makefile.inc.am $(srcdir)/build-config/common/platforms.am $(srcdir)/include/otf2/Makefile.inc.am $(srcdir)/share/Makefile.inc.am $(srcdir)/src/tools/otf2_template/Makefile.inc.am $(srcdir)/templates/Makefile.inc.am $(srcdir)/doc/Makefile.inc.am $(srcdir)/doc/examples/Makefile.inc.am $(srcdir)/contrib-build-vs/Makefile.inc.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(AM_V_at)$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	$(AM_V_at)$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	$(AM_V_at)$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
doc/doxygen-user.cfg: $(top_builddir)/config.status $(top_srcdir)/doc/doxygen-user/doxygen-user.cfg.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
src/config-common.h: $(top_builddir)/config.status $(top_srcdir)/build-config/common/config-common.h
	cd $(top_builddir) && $(SHELL) ./config.status $@
share/otf2/__version__.py: $(top_builddir)/config.status $(top_srcdir)/share/otf2/__version__.py.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
doc/doxygen-user/main.dox: $(top_builddir)/config.status $(top_srcdir)/doc/doxygen-user/main.dox.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
src/tools/otf2_template/otf2-template: $(top_builddir)/config.status $(top_srcdir)/src/tools/otf2_template/otf2_template.py
	cd $(top_builddir) && $(SHELL) ./config.status $@
include/otf2/OTF2_ErrorCodes.h: $(top_builddir)/config.status $(top_srcdir)/common/utils/src/exception/ErrorCodes.tmpl.h
	cd $(top_builddir) && $(SHELL) ./config.status $@
otf2-mini-config.sh: $(top_builddir)/config.status $(srcdir)/otf2-mini-config.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-nodist_binSCRIPTS: $(nodist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@$(am__tty_colors); \
	list='$(nodist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  if $(AM_V_P); then echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	                else echo "  MKDIR    $${mgn}$(DESTDIR)$(bindir)$$std"; fi; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { for p in $$files; do \
	      $(am__strip_dir) \
	      if $(AM_V_P); then echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	                    else echo "  INSTALL  $${grn}$(DESTDIR)$(bindir)$$dir/$$f$$std"; fi; \
	      $(INSTALL_SCRIPT) $$p "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    done; } \
	; done

uninstall-nodist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)
install-nodist_otf2pythonpkgdataPYTHON: $(nodist_otf2pythonpkgdata_PYTHON)
	@$(NORMAL_INSTALL)
	@$(am__tty_colors); \
	list='$(nodist_otf2pythonpkgdata_PYTHON)'; dlist=; list2=; test -n "$(otf2pythonpkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  if $(AM_V_P); then echo " $(MKDIR_P) '$(DESTDIR)$(otf2pythonpkgdatadir)'"; \
	                else echo "  MKDIR    $${mgn}$(DESTDIR)$(otf2pythonpkgdatadir)$$std"; fi; \
	  $(MKDIR_P) "$(DESTDIR)$(otf2pythonpkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for p in $$list2; do \
	  $(am__strip_dir) \
	  if $(AM_V_P); then echo " $(INSTALL_DATA) $$p '$(DESTDIR)$(otf2pythonpkgdatadir)'"; \
	                else echo "  INSTALL  $${blu}$(DESTDIR)$(otf2pythonpkgdatadir)/$$f$$std"; fi; \
	  $(INSTALL_DATA) $$p "$(DESTDIR)$(otf2pythonpkgdatadir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) $(AM_V_pyc) --destdir "$(DESTDIR)" \
	                                --basedir "$(otf2pythonpkgdatadir)" $$dlist; \
	else :; fi

uninstall-nodist_otf2pythonpkgdataPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_otf2pythonpkgdata_PYTHON)'; test -n "$(otf2pythonpkgdatadir)" || list=; \
	py_files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$py_files" || exit 0; \
	dir='$(DESTDIR)$(otf2pythonpkgdatadir)'; \
	pyc_files=`echo "$$py_files" | sed 's|$$|c|'`; \
	pyo_files=`echo "$$py_files" | sed 's|$$|o|'`; \
	py_files_pep3147=`echo "$$py_files" | $(am__pep3147_tweak)`; \
	echo "$$py_files_pep3147";\
	pyc_files_pep3147=`echo "$$py_files_pep3147" | sed 's|$$|c|'`; \
	pyo_files_pep3147=`echo "$$py_files_pep3147" | sed 's|$$|o|'`; \
	st=0; \
	for files in \
	  "$$py_files" \
	  "$$pyc_files" \
	  "$$pyo_files" \
	  "$$pyc_files_pep3147" \
	  "$$pyo_files_pep3147" \
	; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-otf2pythonpkgdataPYTHON: $(otf2pythonpkgdata_PYTHON)
	@$(NORMAL_INSTALL)
	@$(am__tty_colors); \
	list='$(otf2pythonpkgdata_PYTHON)'; dlist=; list2=; test -n "$(otf2pythonpkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  if $(AM_V_P); then echo " $(MKDIR_P) '$(DESTDIR)$(otf2pythonpkgdatadir)'"; \
	                else echo "  MKDIR    $${mgn}$(DESTDIR)$(otf2pythonpkgdatadir)$$std"; fi; \
	  $(MKDIR_P) "$(DESTDIR)$(otf2pythonpkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for p in $$list2; do \
	  $(am__strip_dir) \
	  if $(AM_V_P); then echo " $(INSTALL_DATA) $$p '$(DESTDIR)$(otf2pythonpkgdatadir)'"; \
	                else echo "  INSTALL  $${blu}$(DESTDIR)$(otf2pythonpkgdatadir)/$$f$$std"; fi; \
	  $(INSTALL_DATA) $$p "$(DESTDIR)$(otf2pythonpkgdatadir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) $(AM_V_pyc) --destdir "$(DESTDIR)" \
	                                --basedir "$(otf2pythonpkgdatadir)" $$dlist; \
	else :; fi

uninstall-otf2pythonpkgdataPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(otf2pythonpkgdata_PYTHON)'; test -n "$(otf2pythonpkgdatadir)" || list=; \
	py_files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$py_files" || exit 0; \
	dir='$(DESTDIR)$(otf2pythonpkgdatadir)'; \
	pyc_files=`echo "$$py_files" | sed 's|$$|c|'`; \
	pyo_files=`echo "$$py_files" | sed 's|$$|o|'`; \
	py_files_pep3147=`echo "$$py_files" | $(am__pep3147_tweak)`; \
	echo "$$py_files_pep3147";\
	pyc_files_pep3147=`echo "$$py_files_pep3147" | sed 's|$$|c|'`; \
	pyo_files_pep3147=`echo "$$py_files_pep3147" | sed 's|$$|o|'`; \
	st=0; \
	for files in \
	  "$$py_files" \
	  "$$pyc_files" \
	  "$$pyo_files" \
	  "$$pyc_files_pep3147" \
	  "$$pyo_files_pep3147" \
	; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-dist_examplesDATA: $(dist_examples_DATA)
	@$(NORMAL_INSTALL)
	@$(am__tty_colors); \
	list='$(dist_examples_DATA)'; test -n "$(examplesdir)" || list=; \
	if test -n "$$list"; then \
	  if $(AM_V_P); then echo " $(MKDIR_P) '$(DESTDIR)$(examplesdir)'"; \
	                else echo "  MKDIR    $${mgn}$(DESTDIR)$(examplesdir)$$std"; fi; \
	  $(MKDIR_P) "$(DESTDIR)$(examplesdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if $(AM_V_P); then echo " $(INSTALL_DATA) $$d$$p '$(DESTDIR)$(examplesdir)'"; \
	                else echo "  INSTALL  $${blu}$(DESTDIR)$(examplesdir)/$$f$$std"; fi; \
	  $(INSTALL_DATA) $$d$$p "$(DESTDIR)$(examplesdir)" || exit $$?; \
	done

uninstall-dist_examplesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_examples_DATA)'; test -n "$(examplesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(examplesdir)'; $(am__uninstall_files_from_dir)
install-docDATA: $(doc_DATA)
	@$(NORMAL_INSTALL)
	@$(am__tty_colors); \
	list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  if $(AM_V_P); then echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	                else echo "  MKDIR    $${mgn}$(DESTDIR)$(docdir)$$std"; fi; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if $(AM_V_P); then echo " $(INSTALL_DATA) $$d$$p '$(DESTDIR)$(docdir)'"; \
	                else echo "  INSTALL  $${blu}$(DESTDIR)$(docdir)/$$f$$std"; fi; \
	  $(INSTALL_DATA) $$d$$p "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
install-micpkgdataDATA: $(micpkgdata_DATA)
	@$(NORMAL_INSTALL)
	@$(am__tty_colors); \
	list='$(micpkgdata_DATA)'; test -n "$(micpkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  if $(AM_V_P); then echo " $(MKDIR_P) '$(DESTDIR)$(micpkgdatadir)'"; \
	                else echo "  MKDIR    $${mgn}$(DESTDIR)$(micpkgdatadir)$$std"; fi; \
	  $(MKDIR_P) "$(DESTDIR)$(micpkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if $(AM_V_P); then echo " $(INSTALL_DATA) $$d$$p '$(DESTDIR)$(micpkgdatadir)'"; \
	                else echo "  INSTALL  $${blu}$(DESTDIR)$(micpkgdatadir)/$$f$$std"; fi; \
	  $(INSTALL_DATA) $$d$$p "$(DESTDIR)$(micpkgdatadir)" || exit $$?; \
	done

uninstall-micpkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(micpkgdata_DATA)'; test -n "$(micpkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(micpkgdatadir)'; $(am__uninstall_files_from_dir)
install-otf2pythonpkgdataDATA: $(otf2pythonpkgdata_DATA)
	@$(NORMAL_INSTALL)
	@$(am__tty_colors); \
	list='$(otf2pythonpkgdata_DATA)'; test -n "$(otf2pythonpkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  if $(AM_V_P); then echo " $(MKDIR_P) '$(DESTDIR)$(otf2pythonpkgdatadir)'"; \
	                else echo "  MKDIR    $${mgn}$(DESTDIR)$(otf2pythonpkgdatadir)$$std"; fi; \
	  $(MKDIR_P) "$(DESTDIR)$(otf2pythonpkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if $(AM_V_P); then echo " $(INSTALL_DATA) $$d$$p '$(DESTDIR)$(otf2pythonpkgdatadir)'"; \
	                else echo "  INSTALL  $${blu}$(DESTDIR)$(otf2pythonpkgdatadir)/$$f$$std"; fi; \
	  $(INSTALL_DATA) $$d$$p "$(DESTDIR)$(otf2pythonpkgdatadir)" || exit $$?; \
	done

uninstall-otf2pythonpkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(otf2pythonpkgdata_DATA)'; test -n "$(otf2pythonpkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(otf2pythonpkgdatadir)'; $(am__uninstall_files_from_dir)
install-pkgdataDATA: $(pkgdata_DATA)
	@$(NORMAL_INSTALL)
	@$(am__tty_colors); \
	list='$(pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  if $(AM_V_P); then echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)'"; \
	                else echo "  MKDIR    $${mgn}$(DESTDIR)$(pkgdatadir)$$std"; fi; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if $(AM_V_P); then echo " $(INSTALL_DATA) $$d$$p '$(DESTDIR)$(pkgdatadir)'"; \
	                else echo "  INSTALL  $${blu}$(DESTDIR)$(pkgdatadir)/$$f$$std"; fi; \
	  $(INSTALL_DATA) $$d$$p "$(DESTDIR)$(pkgdatadir)" || exit $$?; \
	done

uninstall-pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir)'; $(am__uninstall_files_from_dir)
install-nodist_otf2includeHEADERS: $(nodist_otf2include_HEADERS)
	@$(NORMAL_INSTALL)
	@$(am__tty_colors); \
	list='$(nodist_otf2include_HEADERS)'; test -n "$(otf2includedir)" || list=; \
	if test -n "$$list"; then \
	  if $(AM_V_P); then echo " $(MKDIR_P) '$(DESTDIR)$(otf2includedir)'"; \
	                else echo "  MKDIR    $${mgn}$(DESTDIR)$(otf2includedir)$$std"; fi; \
	  $(MKDIR_P) "$(DESTDIR)$(otf2includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if $(AM_V_P); then echo " $(INSTALL_HEADER) $$d$$p '$(DESTDIR)$(otf2includedir)'"; \
	                else echo "  INSTALL  $${blu}$(DESTDIR)$(otf2includedir)/$$f$$std"; fi; \
	  $(INSTALL_HEADER) $$d$$p "$(DESTDIR)$(otf2includedir)" || exit $$?; \
	done

uninstall-nodist_otf2includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_otf2include_HEADERS)'; test -n "$(otf2includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(otf2includedir)'; $(am__uninstall_files_from_dir)
install-otf2includeHEADERS: $(otf2include_HEADERS)
	@$(NORMAL_INSTALL)
	@$(am__tty_colors); \
	list='$(otf2include_HEADERS)'; test -n "$(otf2includedir)" || list=; \
	if test -n "$$list"; then \
	  if $(AM_V_P); then echo " $(MKDIR_P) '$(DESTDIR)$(otf2includedir)'"; \
	                else echo "  MKDIR    $${mgn}$(DESTDIR)$(otf2includedir)$$std"; fi; \
	  $(MKDIR_P) "$(DESTDIR)$(otf2includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if $(AM_V_P); then echo " $(INSTALL_HEADER) $$d$$p '$(DESTDIR)$(otf2includedir)'"; \
	                else echo "  INSTALL  $${blu}$(DESTDIR)$(otf2includedir)/$$f$$std"; fi; \
	  $(INSTALL_HEADER) $$d$$p "$(DESTDIR)$(otf2includedir)" || exit $$?; \
	done

uninstall-otf2includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(otf2include_HEADERS)'; test -n "$(otf2includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(otf2includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  if $(AM_V_P); then echo "Making $$target in $$subdir"; fi; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(AM_V_at)$(am__remove_distdir)
	$(AM_V_at)test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    if $(AM_V_P); then \
	      echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	      echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    fi; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-$(AM_V_at)test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	@$(am__tty_colors); \
	if $(AM_V_P); then echo "tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz"; \
	              else echo "  DIST     $${grn}$(distdir).tar.gz$$std"; fi; \
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(AM_V_at)$(am__post_remove_distdir)

dist-bzip2: distdir
	@$(am__tty_colors); \
	if $(AM_V_P); then echo "tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2"; \
	              else echo "  DIST     $${grn}$(distdir).tar.bz2$$std"; fi; \
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(AM_V_at)$(am__post_remove_distdir)

dist-lzip: distdir
	@$(am__tty_colors); \
	if $(AM_V_P); then echo "tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz"; \
	              else echo "  DIST     $${grn}$(distdir).tar.lz$$std"; fi; \
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(AM_V_at)$(am__post_remove_distdir)

dist-xz: distdir
	@$(am__tty_colors); \
	if $(AM_V_P); then echo "tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz"; \
	              else echo "  DIST     $${grn}$(distdir).tar.xz$$std"; fi; \
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(AM_V_at)$(am__post_remove_distdir)

dist-tarZ: distdir
	@$(am__tty_colors); \
	if $(AM_V_P); then echo "tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z"; \
	              else echo "  DIST     $${grn}$(distdir).tar.Z$$std"; fi; \
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(AM_V_at)$(am__post_remove_distdir)

dist-shar: distdir
	@$(am__tty_colors); \
	if $(AM_V_P); then echo "shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz"; \
	              else echo "  DIST     $${grn}$(distdir).shar.gz$$std"; fi; \
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(AM_V_at)$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	@$(am__tty_colors); \
	if $(AM_V_P); then echo "zip -rq $(distdir).zip '$(distdir)'"; \
	              else echo "  DIST     $${grn}$(distdir).zip$$std"; fi; \
	zip -rq $(distdir).zip $(distdir)
	$(AM_V_at)$(am__post_remove_distdir)

dist dist-all:
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir=':'
	$(AM_V_at)$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(AM_V_at)$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: $(BUILT_SOURCES)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(SCRIPTS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(otf2pythonpkgdatadir)" "$(DESTDIR)$(otf2pythonpkgdatadir)" "$(DESTDIR)$(examplesdir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(micpkgdatadir)" "$(DESTDIR)$(otf2pythonpkgdatadir)" "$(DESTDIR)$(pkgdatadir)" "$(DESTDIR)$(otf2includedir)" "$(DESTDIR)$(otf2includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(AM_V_at)if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-data-local install-dist_examplesDATA \
	install-docDATA install-micpkgdataDATA \
	install-nodist_otf2includeHEADERS \
	install-nodist_otf2pythonpkgdataPYTHON \
	install-otf2includeHEADERS install-otf2pythonpkgdataDATA \
	install-otf2pythonpkgdataPYTHON install-pkgdataDATA
	@$(NORMAL_INSTALL)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-nodist_binSCRIPTS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-dist_examplesDATA uninstall-docDATA \
	uninstall-micpkgdataDATA uninstall-nodist_binSCRIPTS \
	uninstall-nodist_otf2includeHEADERS \
	uninstall-nodist_otf2pythonpkgdataPYTHON \
	uninstall-otf2includeHEADERS uninstall-otf2pythonpkgdataDATA \
	uninstall-otf2pythonpkgdataPYTHON uninstall-pkgdataDATA
	@$(NORMAL_INSTALL)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: $(am__recursive_targets) all check check-am install install-am \
	install-data-am install-strip uninstall-am

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-TESTS check-am check-local clean \
	clean-cscope clean-generic clean-local cscope cscopelist-am \
	ctags ctags-am dist dist-all dist-bzip2 dist-gzip dist-hook \
	dist-lzip dist-shar dist-tarZ dist-xz dist-zip distcheck \
	distclean distclean-generic distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-data install-data-am \
	install-data-hook install-data-local install-dist_examplesDATA \
	install-docDATA install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-micpkgdataDATA \
	install-nodist_binSCRIPTS install-nodist_otf2includeHEADERS \
	install-nodist_otf2pythonpkgdataPYTHON \
	install-otf2includeHEADERS install-otf2pythonpkgdataDATA \
	install-otf2pythonpkgdataPYTHON install-pdf install-pdf-am \
	install-pkgdataDATA install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-dist_examplesDATA \
	uninstall-docDATA uninstall-hook uninstall-micpkgdataDATA \
	uninstall-nodist_binSCRIPTS \
	uninstall-nodist_otf2includeHEADERS \
	uninstall-nodist_otf2pythonpkgdataPYTHON \
	uninstall-otf2includeHEADERS uninstall-otf2pythonpkgdataDATA \
	uninstall-otf2pythonpkgdataPYTHON uninstall-pkgdataDATA

clean-local: $(CLEAN_LOCAL)
check-local: $(CHECK_LOCAL)
dist-hook: $(DIST_HOOK)

common-uninstall:
	rm -rf $(DESTDIR)$(datadir)/@PACKAGE@

###############################################################################

@GIT_CONTROLLED_TRUE@@HAVE_UNCRUSTIFY_TRUE@beautify-sp:
@GIT_CONTROLLED_TRUE@@HAVE_UNCRUSTIFY_TRUE@	@$(am__cd) $(srcdir) && ./common/beautifier/beautify
@GIT_CONTROLLED_TRUE@@HAVE_UNCRUSTIFY_TRUE@beautify: beautify-recursive

@GIT_CONTROLLED_TRUE@@HAVE_UNCRUSTIFY_TRUE@beautify-clean:

###############################################################################

###############################################################################

check-build-sp: $(BUILT_SOURCES) all-am $(check_PROGRAMS) $(check_LTLIBRARIES)
check-build: check-build-recursive

###############################################################################

$(SCOREP_RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-sp"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-sp" || exit 1; \
	fi; test -z "$$fail"

src/otf2_print_usage.h: $(srcdir)/doc/doxygen-user/otf2_print_usage.dox.in
	$(AM_V_GEN)$(AWK) '{print "\"" $$0 "\\n\""}' $< >$@

src/otf2_config_usage.h: $(srcdir)/doc/doxygen-user/otf2_config_usage.dox.in
	$(AM_V_GEN)$(AWK) '{print "\"" $$0 "\\n\""}' $< >$@

src/otf2_snapshots_usage.h: $(srcdir)/doc/doxygen-user/otf2_snapshots_usage.dox.in
	$(AM_V_GEN)$(AWK) '{print "\"" $$0 "\\n\""}' $< >$@

src/otf2_estimator_usage.h: $(srcdir)/doc/doxygen-user/otf2_estimator_usage.dox.in
	$(AM_V_GEN)$(AWK) '{print "\"" $$0 "\\n\""}' $< >$@

src/otf2_marker_usage.h: $(srcdir)/doc/doxygen-user/otf2_marker_usage.dox.in
	$(AM_V_GEN)$(AWK) '{print "\"" $$0 "\\n\""}' $< >$@

install-data-local: doxygen-user-install

install-data-hook:
	$(AM_V_at)for target in $(TARGETS)""; do \
	    if test -n "$$target" && test -f $(pkgdatadir)/$$target/@PACKAGE@.summary; then \
	        echo >> $(DESTDIR)$(pkgdatadir)/@PACKAGE@.summary ; \
	        echo >> $(DESTDIR)$(pkgdatadir)/@PACKAGE@.summary ; \
	        echo "=====[ Target: $$target ]====================" >> $(DESTDIR)$(pkgdatadir)/@PACKAGE@.summary ; \
	        echo >> $(DESTDIR)$(pkgdatadir)/@PACKAGE@.summary ; \
	        cat $(pkgdatadir)/$$target/@PACKAGE@.summary >> $(DESTDIR)$(pkgdatadir)/@PACKAGE@.summary ; \
	    fi \
	done

uninstall-hook: doxygen-uninstall common-uninstall

include/otf2/OTF2_ErrorCodes.h: $(srcdir)/share/otf2/otf2.errors
src/otf2_error_decls.gen.h: $(srcdir)/share/otf2/otf2.errors

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/templates/Makefile.inc.am: $(srcdir)/templates/Makefile.inc.tmpl.am $(srcdir)/templates/templates.py
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	$(AM_V_GEN)$(PYTHON) $(srcdir)/templates/remake.py $< $@

generate:
	@$(MAKE) generate=true $(AM_MAKEFLAGS) $(template_sources)

generate-force:
	@$(MAKE) generate=force $(AM_MAKEFLAGS) $(template_sources)

GEN.force:

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_GeneralDefinitions.h: $(srcdir)/templates/OTF2_GeneralDefinitions.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/build-config/VERSION $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GeneralDefinitions.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GeneralDefinitions.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_GeneralDefinitions.h OTF2_GeneralDefinitions.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps ../build-config/VERSION) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_Definitions.h: $(srcdir)/templates/OTF2_Definitions.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_Definitions.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_Definitions.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_Definitions.h OTF2_Definitions.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/otf2_file_types.h: $(srcdir)/templates/otf2_file_types.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_file_types.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_file_types.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/otf2_file_types.h otf2_file_types.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_Events.h: $(srcdir)/templates/OTF2_Events.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_Events.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_Events.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_Events.h OTF2_Events.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/otf2_events_int.h: $(srcdir)/templates/otf2_events_int.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_events_int.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_events_int.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/otf2_events_int.h otf2_events_int.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_EvtReaderCallbacks.h: $(srcdir)/templates/OTF2_EvtReaderCallbacks.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_EvtReaderCallbacks.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_EvtReaderCallbacks.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_EvtReaderCallbacks.h OTF2_EvtReaderCallbacks.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/OTF2_EvtReader_inc.c: $(srcdir)/templates/OTF2_EvtReader_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_EvtReader_inc.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_EvtReader_inc.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/OTF2_EvtReader_inc.c OTF2_EvtReader_inc.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_EvtWriter.h: $(srcdir)/templates/OTF2_EvtWriter.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_EvtWriter.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_EvtWriter.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_EvtWriter.h OTF2_EvtWriter.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/OTF2_EvtWriter_inc.c: $(srcdir)/templates/OTF2_EvtWriter_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_EvtWriter_inc.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_EvtWriter_inc.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/OTF2_EvtWriter_inc.c OTF2_EvtWriter_inc.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_GlobalEvtReaderCallbacks.h: $(srcdir)/templates/OTF2_GlobalEvtReaderCallbacks.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalEvtReaderCallbacks.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalEvtReaderCallbacks.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_GlobalEvtReaderCallbacks.h OTF2_GlobalEvtReaderCallbacks.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_GlobalSnapReaderCallbacks.h: $(srcdir)/templates/OTF2_GlobalSnapReaderCallbacks.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalSnapReaderCallbacks.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalSnapReaderCallbacks.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_GlobalSnapReaderCallbacks.h OTF2_GlobalSnapReaderCallbacks.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/OTF2_GlobalEvtReader_inc.c: $(srcdir)/templates/OTF2_GlobalEvtReader_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalEvtReader_inc.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalEvtReader_inc.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/OTF2_GlobalEvtReader_inc.c OTF2_GlobalEvtReader_inc.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/OTF2_GlobalSnapReader_inc.c: $(srcdir)/templates/OTF2_GlobalSnapReader_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalSnapReader_inc.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalSnapReader_inc.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/OTF2_GlobalSnapReader_inc.c OTF2_GlobalSnapReader_inc.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/otf2_local_definitions.h: $(srcdir)/templates/otf2_local_definitions.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_local_definitions.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_local_definitions.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/otf2_local_definitions.h otf2_local_definitions.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_DefReaderCallbacks.h: $(srcdir)/templates/OTF2_DefReaderCallbacks.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_DefReaderCallbacks.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_DefReaderCallbacks.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_DefReaderCallbacks.h OTF2_DefReaderCallbacks.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/OTF2_DefReader_inc.c: $(srcdir)/templates/OTF2_DefReader_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_DefReader_inc.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_DefReader_inc.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/OTF2_DefReader_inc.c OTF2_DefReader_inc.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_DefWriter.h: $(srcdir)/templates/OTF2_DefWriter.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_DefWriter.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_DefWriter.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_DefWriter.h OTF2_DefWriter.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/OTF2_DefWriter_inc.c: $(srcdir)/templates/OTF2_DefWriter_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_DefWriter_inc.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_DefWriter_inc.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/OTF2_DefWriter_inc.c OTF2_DefWriter_inc.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/otf2_global_definitions.h: $(srcdir)/templates/otf2_global_definitions.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_global_definitions.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_global_definitions.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/otf2_global_definitions.h otf2_global_definitions.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_GlobalDefReaderCallbacks.h: $(srcdir)/templates/OTF2_GlobalDefReaderCallbacks.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalDefReaderCallbacks.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalDefReaderCallbacks.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_GlobalDefReaderCallbacks.h OTF2_GlobalDefReaderCallbacks.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/OTF2_GlobalDefReader_inc.c: $(srcdir)/templates/OTF2_GlobalDefReader_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalDefReader_inc.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalDefReader_inc.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/OTF2_GlobalDefReader_inc.c OTF2_GlobalDefReader_inc.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_GlobalDefWriter.h: $(srcdir)/templates/OTF2_GlobalDefWriter.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalDefWriter.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalDefWriter.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_GlobalDefWriter.h OTF2_GlobalDefWriter.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/OTF2_GlobalDefWriter_inc.c: $(srcdir)/templates/OTF2_GlobalDefWriter_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalDefWriter_inc.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_GlobalDefWriter_inc.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/OTF2_GlobalDefWriter_inc.c OTF2_GlobalDefWriter_inc.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/otf2_snaps.h: $(srcdir)/templates/otf2_snaps.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_snaps.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_snaps.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/otf2_snaps.h otf2_snaps.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_SnapReaderCallbacks.h: $(srcdir)/templates/OTF2_SnapReaderCallbacks.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_SnapReaderCallbacks.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_SnapReaderCallbacks.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_SnapReaderCallbacks.h OTF2_SnapReaderCallbacks.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/OTF2_SnapReader_inc.c: $(srcdir)/templates/OTF2_SnapReader_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_SnapReader_inc.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_SnapReader_inc.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/OTF2_SnapReader_inc.c OTF2_SnapReader_inc.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_SnapWriter.h: $(srcdir)/templates/OTF2_SnapWriter.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_SnapWriter.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_SnapWriter.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_SnapWriter.h OTF2_SnapWriter.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/OTF2_SnapWriter_inc.c: $(srcdir)/templates/OTF2_SnapWriter_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_SnapWriter_inc.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_SnapWriter_inc.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/OTF2_SnapWriter_inc.c OTF2_SnapWriter_inc.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/tools/otf2_print/otf2_print_inc.c: $(srcdir)/templates/otf2_print_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_print_inc.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_print_inc.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/tools/otf2_print/otf2_print_inc.c otf2_print_inc.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/tools/otf2_print/otf2_print_types.h: $(srcdir)/templates/otf2_print_types.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_print_types.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_print_types.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/tools/otf2_print/otf2_print_types.h otf2_print_types.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/tools/otf2_snapshots/otf2_snapshots_events.hpp: $(srcdir)/templates/otf2_snapshots_events.tmpl.hpp $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_snapshots_events.tmpl.hpp.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_snapshots_events.tmpl.hpp.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/tools/otf2_snapshots/otf2_snapshots_events.hpp otf2_snapshots_events.tmpl.hpp ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/tools/otf2_snapshots/otf2_snapshots_events_inc.cpp: $(srcdir)/templates/otf2_snapshots_events_inc.tmpl.cpp $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_snapshots_events_inc.tmpl.cpp.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_snapshots_events_inc.tmpl.cpp.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/tools/otf2_snapshots/otf2_snapshots_events_inc.cpp otf2_snapshots_events_inc.tmpl.cpp ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/tools/otf2_snapshots/otf2_snapshots_callbacks_inc.cpp: $(srcdir)/templates/otf2_snapshots_callbacks_inc.tmpl.cpp $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_snapshots_callbacks_inc.tmpl.cpp.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_snapshots_callbacks_inc.tmpl.cpp.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/tools/otf2_snapshots/otf2_snapshots_callbacks_inc.cpp otf2_snapshots_callbacks_inc.tmpl.cpp ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/otf2_attribute_value_inc.c: $(srcdir)/templates/otf2_attribute_value_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_attribute_value_inc.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_attribute_value_inc.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/otf2_attribute_value_inc.c otf2_attribute_value_inc.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_AttributeValue.h: $(srcdir)/templates/OTF2_AttributeValue.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_AttributeValue.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_AttributeValue.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_AttributeValue.h OTF2_AttributeValue.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/otf2_attribute_list_inc.c: $(srcdir)/templates/otf2_attribute_list_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_attribute_list_inc.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_attribute_list_inc.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/otf2_attribute_list_inc.c otf2_attribute_list_inc.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_AttributeList.h: $(srcdir)/templates/OTF2_AttributeList.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_AttributeList.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_AttributeList.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_AttributeList.h OTF2_AttributeList.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/otf2_attic_types.h: $(srcdir)/templates/otf2_attic_types.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_attic_types.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_attic_types.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/otf2_attic_types.h otf2_attic_types.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/doc/doxygen-user/definitions.dox: $(srcdir)/templates/definitions.tmpl.dox $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check definitions.tmpl.dox.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check definitions.tmpl.dox.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../doc/doxygen-user/definitions.dox definitions.tmpl.dox ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/doc/doxygen-user/events.dox: $(srcdir)/templates/events.tmpl.dox $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check events.tmpl.dox.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check events.tmpl.dox.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../doc/doxygen-user/events.dox events.tmpl.dox ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/doc/doxygen-user/snaps.dox: $(srcdir)/templates/snaps.tmpl.dox $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check snaps.tmpl.dox.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check snaps.tmpl.dox.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../doc/doxygen-user/snaps.dox snaps.tmpl.dox ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/templates/example.cc: $(srcdir)/templates/example.tmpl.cc $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check example.tmpl.cc.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check example.tmpl.cc.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../templates/example.cc example.tmpl.cc ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_EventSizeEstimator.h: $(srcdir)/templates/OTF2_EventSizeEstimator.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_EventSizeEstimator.tmpl.h.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_EventSizeEstimator.tmpl.h.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../include/otf2/OTF2_EventSizeEstimator.h OTF2_EventSizeEstimator.tmpl.h ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/OTF2_EventSizeEstimator.c: $(srcdir)/templates/OTF2_EventSizeEstimator.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_EventSizeEstimator.tmpl.c.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check OTF2_EventSizeEstimator.tmpl.c.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/OTF2_EventSizeEstimator.c OTF2_EventSizeEstimator.tmpl.c ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/tools/otf2_estimator/otf2_estimator_inc.cpp: $(srcdir)/templates/otf2_estimator_inc.tmpl.cpp $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_estimator_inc.tmpl.cpp.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2_estimator_inc.tmpl.cpp.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/tools/otf2_estimator/otf2_estimator_inc.cpp otf2_estimator_inc.tmpl.cpp ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/Definitions.py: $(srcdir)/templates/_otf2.Definitions.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.Definitions.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.Definitions.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/Definitions.py _otf2.Definitions.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/Events.py: $(srcdir)/templates/_otf2.Events.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.Events.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.Events.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/Events.py _otf2.Events.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/GeneralDefinitions.py: $(srcdir)/templates/_otf2.GeneralDefinitions.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.GeneralDefinitions.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.GeneralDefinitions.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/GeneralDefinitions.py _otf2.GeneralDefinitions.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/GlobalDefReaderCallbacks.py: $(srcdir)/templates/_otf2.GlobalDefReaderCallbacks.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.GlobalDefReaderCallbacks.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.GlobalDefReaderCallbacks.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/GlobalDefReaderCallbacks.py _otf2.GlobalDefReaderCallbacks.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/DefReaderCallbacks.py: $(srcdir)/templates/_otf2.DefReaderCallbacks.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.DefReaderCallbacks.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.DefReaderCallbacks.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/DefReaderCallbacks.py _otf2.DefReaderCallbacks.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/EvtReaderCallbacks.py: $(srcdir)/templates/_otf2.EvtReaderCallbacks.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.EvtReaderCallbacks.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.EvtReaderCallbacks.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/EvtReaderCallbacks.py _otf2.EvtReaderCallbacks.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/GlobalEvtReaderCallbacks.py: $(srcdir)/templates/_otf2.GlobalEvtReaderCallbacks.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.GlobalEvtReaderCallbacks.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.GlobalEvtReaderCallbacks.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/GlobalEvtReaderCallbacks.py _otf2.GlobalEvtReaderCallbacks.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/GlobalSnapReaderCallbacks.py: $(srcdir)/templates/_otf2.GlobalSnapReaderCallbacks.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.GlobalSnapReaderCallbacks.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.GlobalSnapReaderCallbacks.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/GlobalSnapReaderCallbacks.py _otf2.GlobalSnapReaderCallbacks.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/SnapReaderCallbacks.py: $(srcdir)/templates/_otf2.SnapReaderCallbacks.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.SnapReaderCallbacks.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.SnapReaderCallbacks.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/SnapReaderCallbacks.py _otf2.SnapReaderCallbacks.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/EvtWriter.py: $(srcdir)/templates/_otf2.EvtWriter.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.EvtWriter.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.EvtWriter.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/EvtWriter.py _otf2.EvtWriter.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/DefWriter.py: $(srcdir)/templates/_otf2.DefWriter.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.DefWriter.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.DefWriter.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/DefWriter.py _otf2.DefWriter.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/GlobalDefWriter.py: $(srcdir)/templates/_otf2.GlobalDefWriter.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.GlobalDefWriter.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.GlobalDefWriter.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/GlobalDefWriter.py _otf2.GlobalDefWriter.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/SnapWriter.py: $(srcdir)/templates/_otf2.SnapWriter.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.SnapWriter.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.SnapWriter.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/SnapWriter.py _otf2.SnapWriter.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/AttributeList.py: $(srcdir)/templates/_otf2.AttributeList.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.AttributeList.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.AttributeList.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/AttributeList.py _otf2.AttributeList.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/EventSizeEstimator.py: $(srcdir)/templates/_otf2.EventSizeEstimator.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.EventSizeEstimator.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.EventSizeEstimator.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/EventSizeEstimator.py _otf2.EventSizeEstimator.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/_otf2/AttributeValue.py: $(srcdir)/templates/_otf2.AttributeValue.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.AttributeValue.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check _otf2.AttributeValue.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/_otf2/AttributeValue.py _otf2.AttributeValue.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/otf2/events.py: $(srcdir)/templates/otf2.events.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.events.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.events.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/otf2/events.py otf2.events.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/otf2/event_reader.py: $(srcdir)/templates/otf2.event_reader.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.event_reader.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.event_reader.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/otf2/event_reader.py otf2.event_reader.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/otf2/event_writer.py: $(srcdir)/templates/otf2.event_writer.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.event_writer.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.event_writer.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/otf2/event_writer.py otf2.event_writer.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/otf2/registry.py: $(srcdir)/templates/otf2.registry.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.registry.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.registry.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/otf2/registry.py otf2.registry.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/otf2/definition_writer.py: $(srcdir)/templates/otf2.definition_writer.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.definition_writer.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.definition_writer.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/otf2/definition_writer.py otf2.definition_writer.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/otf2/enums.py: $(srcdir)/templates/otf2.enums.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.enums.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.enums.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/otf2/enums.py otf2.enums.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/src/python/otf2/attribute_value.py: $(srcdir)/templates/otf2.attribute_value.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py GEN.force
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	for f in x $$MAKEFLAGS; do \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  case $$f in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *=* | --[!B]*);; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    *B*) generate=force;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	  esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	done; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	case "$${generate}" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(true|force|false|'') : accept ;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	(*) \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    echo >&2 "$${red}error: Invalid value for 'generate': '$$generate'$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	esac; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	if test $${generate:-false} = false; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${red}error: target does not exists$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.attribute_value.tmpl.py.sig); \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        res=$$?; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        if test $$res -eq 1; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target modified since last creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: please modify only the source file: $<"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        elif test $$res -eq 2; then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${mag}warning: target needs re-creation$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	            echo >&2 "$@: $${blu}note: run '$(MAKE) generate=true $@' to re-create$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	elif test $${generate:-false} = force || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $@ || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   test ! -e $<.sig || \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	   ! ($(am__cd) $(srcdir)/templates && $(GEN.sig) --check otf2.attribute_value.tmpl.py.sig); then \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    if test $${V-0} = 0; then echo "  GEN      $${mag}$@$$std"; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    else                      echo $(GEN.tmpl.cmd) $<; fi; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    rm -f $@ $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    trap 'rm -f $@-t $<.sig-t' EXIT; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	    $(GEN.tmpl.cmd) $< >$@-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $@-t $@ && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        case "$@" in \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*.py) : uncrustify cannot beautify Python code;; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        (*) ( test -e $(srcdir)/common/beautifier/beautify.cfg && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	                 uncrustify -c $(srcdir)/common/beautifier/beautify.cfg --mtime --no-backup -q $@ || true );; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        esac && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        ($(am__cd) $(srcdir)/templates && $(GEN.sig) ../src/python/otf2/attribute_value.py otf2.attribute_value.tmpl.py ../share/otf2/otf2.types ../share/otf2/otf2.enums ../share/otf2/otf2.defs ../share/otf2/otf2.events ../share/otf2/otf2.snaps) >$<.sig-t && \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	        mv $<.sig-t $<.sig; \
@HAVE_PYTHON_FOR_GENERATOR_TRUE@	fi

# special build dep rule, to trigger update
@HAVE_PYTHON_FOR_GENERATOR_TRUE@$(srcdir)/include/otf2/OTF2_GeneralDefinitions.h: share/otf2/__version__.py

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_GeneralDefinitions.h: $(srcdir)/templates/OTF2_GeneralDefinitions.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/build-config/VERSION $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_Definitions.h: $(srcdir)/templates/OTF2_Definitions.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/otf2_file_types.h: $(srcdir)/templates/otf2_file_types.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_Events.h: $(srcdir)/templates/OTF2_Events.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/otf2_events_int.h: $(srcdir)/templates/otf2_events_int.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_EvtReaderCallbacks.h: $(srcdir)/templates/OTF2_EvtReaderCallbacks.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/OTF2_EvtReader_inc.c: $(srcdir)/templates/OTF2_EvtReader_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_EvtWriter.h: $(srcdir)/templates/OTF2_EvtWriter.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/OTF2_EvtWriter_inc.c: $(srcdir)/templates/OTF2_EvtWriter_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_GlobalEvtReaderCallbacks.h: $(srcdir)/templates/OTF2_GlobalEvtReaderCallbacks.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_GlobalSnapReaderCallbacks.h: $(srcdir)/templates/OTF2_GlobalSnapReaderCallbacks.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/OTF2_GlobalEvtReader_inc.c: $(srcdir)/templates/OTF2_GlobalEvtReader_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/OTF2_GlobalSnapReader_inc.c: $(srcdir)/templates/OTF2_GlobalSnapReader_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/otf2_local_definitions.h: $(srcdir)/templates/otf2_local_definitions.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_DefReaderCallbacks.h: $(srcdir)/templates/OTF2_DefReaderCallbacks.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/OTF2_DefReader_inc.c: $(srcdir)/templates/OTF2_DefReader_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_DefWriter.h: $(srcdir)/templates/OTF2_DefWriter.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/OTF2_DefWriter_inc.c: $(srcdir)/templates/OTF2_DefWriter_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/otf2_global_definitions.h: $(srcdir)/templates/otf2_global_definitions.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_GlobalDefReaderCallbacks.h: $(srcdir)/templates/OTF2_GlobalDefReaderCallbacks.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/OTF2_GlobalDefReader_inc.c: $(srcdir)/templates/OTF2_GlobalDefReader_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_GlobalDefWriter.h: $(srcdir)/templates/OTF2_GlobalDefWriter.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/OTF2_GlobalDefWriter_inc.c: $(srcdir)/templates/OTF2_GlobalDefWriter_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/otf2_snaps.h: $(srcdir)/templates/otf2_snaps.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_SnapReaderCallbacks.h: $(srcdir)/templates/OTF2_SnapReaderCallbacks.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/OTF2_SnapReader_inc.c: $(srcdir)/templates/OTF2_SnapReader_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_SnapWriter.h: $(srcdir)/templates/OTF2_SnapWriter.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/OTF2_SnapWriter_inc.c: $(srcdir)/templates/OTF2_SnapWriter_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/tools/otf2_print/otf2_print_inc.c: $(srcdir)/templates/otf2_print_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/tools/otf2_print/otf2_print_types.h: $(srcdir)/templates/otf2_print_types.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/tools/otf2_snapshots/otf2_snapshots_events.hpp: $(srcdir)/templates/otf2_snapshots_events.tmpl.hpp $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/tools/otf2_snapshots/otf2_snapshots_events_inc.cpp: $(srcdir)/templates/otf2_snapshots_events_inc.tmpl.cpp $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/tools/otf2_snapshots/otf2_snapshots_callbacks_inc.cpp: $(srcdir)/templates/otf2_snapshots_callbacks_inc.tmpl.cpp $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/otf2_attribute_value_inc.c: $(srcdir)/templates/otf2_attribute_value_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_AttributeValue.h: $(srcdir)/templates/OTF2_AttributeValue.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/otf2_attribute_list_inc.c: $(srcdir)/templates/otf2_attribute_list_inc.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_AttributeList.h: $(srcdir)/templates/OTF2_AttributeList.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/otf2_attic_types.h: $(srcdir)/templates/otf2_attic_types.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/doc/doxygen-user/definitions.dox: $(srcdir)/templates/definitions.tmpl.dox $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/doc/doxygen-user/events.dox: $(srcdir)/templates/events.tmpl.dox $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/doc/doxygen-user/snaps.dox: $(srcdir)/templates/snaps.tmpl.dox $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/templates/example.cc: $(srcdir)/templates/example.tmpl.cc $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/include/otf2/OTF2_EventSizeEstimator.h: $(srcdir)/templates/OTF2_EventSizeEstimator.tmpl.h $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/OTF2_EventSizeEstimator.c: $(srcdir)/templates/OTF2_EventSizeEstimator.tmpl.c $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/tools/otf2_estimator/otf2_estimator_inc.cpp: $(srcdir)/templates/otf2_estimator_inc.tmpl.cpp $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/Definitions.py: $(srcdir)/templates/_otf2.Definitions.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/Events.py: $(srcdir)/templates/_otf2.Events.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/GeneralDefinitions.py: $(srcdir)/templates/_otf2.GeneralDefinitions.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/GlobalDefReaderCallbacks.py: $(srcdir)/templates/_otf2.GlobalDefReaderCallbacks.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/DefReaderCallbacks.py: $(srcdir)/templates/_otf2.DefReaderCallbacks.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/EvtReaderCallbacks.py: $(srcdir)/templates/_otf2.EvtReaderCallbacks.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/GlobalEvtReaderCallbacks.py: $(srcdir)/templates/_otf2.GlobalEvtReaderCallbacks.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/GlobalSnapReaderCallbacks.py: $(srcdir)/templates/_otf2.GlobalSnapReaderCallbacks.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/SnapReaderCallbacks.py: $(srcdir)/templates/_otf2.SnapReaderCallbacks.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/EvtWriter.py: $(srcdir)/templates/_otf2.EvtWriter.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/DefWriter.py: $(srcdir)/templates/_otf2.DefWriter.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/GlobalDefWriter.py: $(srcdir)/templates/_otf2.GlobalDefWriter.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/SnapWriter.py: $(srcdir)/templates/_otf2.SnapWriter.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/AttributeList.py: $(srcdir)/templates/_otf2.AttributeList.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/EventSizeEstimator.py: $(srcdir)/templates/_otf2.EventSizeEstimator.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/_otf2/AttributeValue.py: $(srcdir)/templates/_otf2.AttributeValue.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/otf2/events.py: $(srcdir)/templates/otf2.events.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/otf2/event_reader.py: $(srcdir)/templates/otf2.event_reader.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/otf2/event_writer.py: $(srcdir)/templates/otf2.event_writer.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/otf2/registry.py: $(srcdir)/templates/otf2.registry.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/otf2/definition_writer.py: $(srcdir)/templates/otf2.definition_writer.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/otf2/enums.py: $(srcdir)/templates/otf2.enums.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_FOR_GENERATOR_FALSE@$(srcdir)/src/python/otf2/attribute_value.py: $(srcdir)/templates/otf2.attribute_value.tmpl.py $(srcdir)/share/otf2/otf2.types $(srcdir)/share/otf2/otf2.enums $(srcdir)/share/otf2/otf2.defs $(srcdir)/share/otf2/otf2.events $(srcdir)/share/otf2/otf2.snaps $(srcdir)/src/tools/otf2_template/otf2_template.py
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	if ! test -e $@; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${red}error: target does not exists, no supported Python for the generator available$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    exit 1; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	elif ! test -e $<.sig; then \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    echo >&2 "$@: $${mag}warning: no signature for target$${std}"; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	else \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    case " $? " in \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    (*" $< "*|*" $(srcdir)/share/otf2/otf2.types "*|*" $(srcdir)/share/otf2/otf2.enums "*|*" $(srcdir)/share/otf2/otf2.defs "*|*" $(srcdir)/share/otf2/otf2.events "*|*" $(srcdir)/share/otf2/otf2.snaps "*) \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	        echo >&2 "$@: $${red}warning: target out of date, no supported Python for the generator available to re-create: $?$${std}";; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	    esac; \
@HAVE_PYTHON_FOR_GENERATOR_FALSE@	fi

@HAVE_PYTHON_TRUE@dist-check-template-sigs:
@HAVE_PYTHON_TRUE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_TRUE@	$(am__cd) $(distdir)/templates || exit 1; \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_GeneralDefinitions.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_GeneralDefinitions.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_Definitions.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_Definitions.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_file_types.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/otf2_file_types.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_Events.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_Events.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_events_int.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/otf2_events_int.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_EvtReaderCallbacks.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_EvtReaderCallbacks.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_EvtReader_inc.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/OTF2_EvtReader_inc.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_EvtWriter.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_EvtWriter.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_EvtWriter_inc.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/OTF2_EvtWriter_inc.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_GlobalEvtReaderCallbacks.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_GlobalEvtReaderCallbacks.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_GlobalSnapReaderCallbacks.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_GlobalSnapReaderCallbacks.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_GlobalEvtReader_inc.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/OTF2_GlobalEvtReader_inc.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_GlobalSnapReader_inc.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/OTF2_GlobalSnapReader_inc.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_local_definitions.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/otf2_local_definitions.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_DefReaderCallbacks.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_DefReaderCallbacks.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_DefReader_inc.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/OTF2_DefReader_inc.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_DefWriter.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_DefWriter.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_DefWriter_inc.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/OTF2_DefWriter_inc.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_global_definitions.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/otf2_global_definitions.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_GlobalDefReaderCallbacks.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_GlobalDefReaderCallbacks.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_GlobalDefReader_inc.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/OTF2_GlobalDefReader_inc.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_GlobalDefWriter.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_GlobalDefWriter.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_GlobalDefWriter_inc.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/OTF2_GlobalDefWriter_inc.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_snaps.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/otf2_snaps.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_SnapReaderCallbacks.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_SnapReaderCallbacks.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_SnapReader_inc.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/OTF2_SnapReader_inc.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_SnapWriter.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_SnapWriter.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_SnapWriter_inc.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/OTF2_SnapWriter_inc.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_print_inc.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/tools/otf2_print/otf2_print_inc.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_print_types.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/tools/otf2_print/otf2_print_types.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_snapshots_events.tmpl.hpp.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/tools/otf2_snapshots/otf2_snapshots_events.hpp$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_snapshots_events_inc.tmpl.cpp.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/tools/otf2_snapshots/otf2_snapshots_events_inc.cpp$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_snapshots_callbacks_inc.tmpl.cpp.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/tools/otf2_snapshots/otf2_snapshots_callbacks_inc.cpp$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_attribute_value_inc.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/otf2_attribute_value_inc.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_AttributeValue.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_AttributeValue.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_attribute_list_inc.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/otf2_attribute_list_inc.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_AttributeList.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_AttributeList.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_attic_types.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/otf2_attic_types.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check definitions.tmpl.dox.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}doc/doxygen-user/definitions.dox$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check events.tmpl.dox.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}doc/doxygen-user/events.dox$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check snaps.tmpl.dox.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}doc/doxygen-user/snaps.dox$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check example.tmpl.cc.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}templates/example.cc$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_EventSizeEstimator.tmpl.h.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}include/otf2/OTF2_EventSizeEstimator.h$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check OTF2_EventSizeEstimator.tmpl.c.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/OTF2_EventSizeEstimator.c$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2_estimator_inc.tmpl.cpp.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/tools/otf2_estimator/otf2_estimator_inc.cpp$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.Definitions.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/Definitions.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.Events.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/Events.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.GeneralDefinitions.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/GeneralDefinitions.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.GlobalDefReaderCallbacks.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/GlobalDefReaderCallbacks.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.DefReaderCallbacks.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/DefReaderCallbacks.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.EvtReaderCallbacks.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/EvtReaderCallbacks.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.GlobalEvtReaderCallbacks.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/GlobalEvtReaderCallbacks.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.GlobalSnapReaderCallbacks.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/GlobalSnapReaderCallbacks.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.SnapReaderCallbacks.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/SnapReaderCallbacks.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.EvtWriter.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/EvtWriter.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.DefWriter.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/DefWriter.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.GlobalDefWriter.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/GlobalDefWriter.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.SnapWriter.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/SnapWriter.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.AttributeList.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/AttributeList.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.EventSizeEstimator.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/EventSizeEstimator.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check _otf2.AttributeValue.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/_otf2/AttributeValue.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2.events.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/otf2/events.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2.event_reader.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/otf2/event_reader.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2.event_writer.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/otf2/event_writer.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2.registry.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/otf2/registry.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2.definition_writer.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/otf2/definition_writer.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2.enums.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/otf2/enums.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        $(GEN.sig) --check otf2.attribute_value.tmpl.py.sig \
@HAVE_PYTHON_TRUE@            || (echo "$${red}FAIL:$${std} $${blu}src/python/otf2/attribute_value.py$${std}"; exit 1); \
@HAVE_PYTHON_TRUE@        :

@HAVE_PYTHON_FALSE@dist-check-template-sigs:
@HAVE_PYTHON_FALSE@	@$(otf2__tty_colors); \
@HAVE_PYTHON_FALSE@	echo >&2 "$${mag}warning: cannot check template results, no Python available$${std}" && \
@HAVE_PYTHON_FALSE@	exit 1
dist-touch-template-outputs:
	@touch \
	    $(distdir)/include/otf2/OTF2_GeneralDefinitions.h \
	    $(distdir)/include/otf2/OTF2_Definitions.h \
	    $(distdir)/src/otf2_file_types.h \
	    $(distdir)/include/otf2/OTF2_Events.h \
	    $(distdir)/src/otf2_events_int.h \
	    $(distdir)/include/otf2/OTF2_EvtReaderCallbacks.h \
	    $(distdir)/src/OTF2_EvtReader_inc.c \
	    $(distdir)/include/otf2/OTF2_EvtWriter.h \
	    $(distdir)/src/OTF2_EvtWriter_inc.c \
	    $(distdir)/include/otf2/OTF2_GlobalEvtReaderCallbacks.h \
	    $(distdir)/include/otf2/OTF2_GlobalSnapReaderCallbacks.h \
	    $(distdir)/src/OTF2_GlobalEvtReader_inc.c \
	    $(distdir)/src/OTF2_GlobalSnapReader_inc.c \
	    $(distdir)/src/otf2_local_definitions.h \
	    $(distdir)/include/otf2/OTF2_DefReaderCallbacks.h \
	    $(distdir)/src/OTF2_DefReader_inc.c \
	    $(distdir)/include/otf2/OTF2_DefWriter.h \
	    $(distdir)/src/OTF2_DefWriter_inc.c \
	    $(distdir)/src/otf2_global_definitions.h \
	    $(distdir)/include/otf2/OTF2_GlobalDefReaderCallbacks.h \
	    $(distdir)/src/OTF2_GlobalDefReader_inc.c \
	    $(distdir)/include/otf2/OTF2_GlobalDefWriter.h \
	    $(distdir)/src/OTF2_GlobalDefWriter_inc.c \
	    $(distdir)/src/otf2_snaps.h \
	    $(distdir)/include/otf2/OTF2_SnapReaderCallbacks.h \
	    $(distdir)/src/OTF2_SnapReader_inc.c \
	    $(distdir)/include/otf2/OTF2_SnapWriter.h \
	    $(distdir)/src/OTF2_SnapWriter_inc.c \
	    $(distdir)/src/tools/otf2_print/otf2_print_inc.c \
	    $(distdir)/src/tools/otf2_print/otf2_print_types.h \
	    $(distdir)/src/tools/otf2_snapshots/otf2_snapshots_events.hpp \
	    $(distdir)/src/tools/otf2_snapshots/otf2_snapshots_events_inc.cpp \
	    $(distdir)/src/tools/otf2_snapshots/otf2_snapshots_callbacks_inc.cpp \
	    $(distdir)/src/otf2_attribute_value_inc.c \
	    $(distdir)/include/otf2/OTF2_AttributeValue.h \
	    $(distdir)/src/otf2_attribute_list_inc.c \
	    $(distdir)/include/otf2/OTF2_AttributeList.h \
	    $(distdir)/src/otf2_attic_types.h \
	    $(distdir)/doc/doxygen-user/definitions.dox \
	    $(distdir)/doc/doxygen-user/events.dox \
	    $(distdir)/doc/doxygen-user/snaps.dox \
	    $(distdir)/templates/example.cc \
	    $(distdir)/include/otf2/OTF2_EventSizeEstimator.h \
	    $(distdir)/src/OTF2_EventSizeEstimator.c \
	    $(distdir)/src/tools/otf2_estimator/otf2_estimator_inc.cpp \
	    $(distdir)/src/python/_otf2/Definitions.py \
	    $(distdir)/src/python/_otf2/Events.py \
	    $(distdir)/src/python/_otf2/GeneralDefinitions.py \
	    $(distdir)/src/python/_otf2/GlobalDefReaderCallbacks.py \
	    $(distdir)/src/python/_otf2/DefReaderCallbacks.py \
	    $(distdir)/src/python/_otf2/EvtReaderCallbacks.py \
	    $(distdir)/src/python/_otf2/GlobalEvtReaderCallbacks.py \
	    $(distdir)/src/python/_otf2/GlobalSnapReaderCallbacks.py \
	    $(distdir)/src/python/_otf2/SnapReaderCallbacks.py \
	    $(distdir)/src/python/_otf2/EvtWriter.py \
	    $(distdir)/src/python/_otf2/DefWriter.py \
	    $(distdir)/src/python/_otf2/GlobalDefWriter.py \
	    $(distdir)/src/python/_otf2/SnapWriter.py \
	    $(distdir)/src/python/_otf2/AttributeList.py \
	    $(distdir)/src/python/_otf2/EventSizeEstimator.py \
	    $(distdir)/src/python/_otf2/AttributeValue.py \
	    $(distdir)/src/python/otf2/events.py \
	    $(distdir)/src/python/otf2/event_reader.py \
	    $(distdir)/src/python/otf2/event_writer.py \
	    $(distdir)/src/python/otf2/registry.py \
	    $(distdir)/src/python/otf2/definition_writer.py \
	    $(distdir)/src/python/otf2/enums.py \
	    $(distdir)/src/python/otf2/attribute_value.py \
	    .

doxygen-uninstall:
	$(AM_V_at)rm -rf $(DESTDIR)$(docdir)

@GIT_CONTROLLED_TRUE@doxygen-user-install:

@GIT_CONTROLLED_TRUE@update-revision:
@GIT_CONTROLLED_TRUE@	@$(am__tty_colors); \
@GIT_CONTROLLED_TRUE@	if $(AM_V_P); then echo "cd $(srcdir) && git describe --long --always --dirty | $(SED) 's/.*-g//' > 'build-config/REVISION'"; \
@GIT_CONTROLLED_TRUE@	else               echo "  GEN      $${mgn}$(srcdir)/build-config/REVISION$$std"; fi; \
@GIT_CONTROLLED_TRUE@	cd $(srcdir) && git describe --long --always --dirty | $(SED) 's/.*-g//' > "build-config/REVISION"

@GIT_CONTROLLED_TRUE@copy-revision-file-to-dist:
@GIT_CONTROLLED_TRUE@	$(AM_V_at)$(MKDIR_P) "$(distdir)/build-config/"
@GIT_CONTROLLED_TRUE@	$(AM_V_at)cp -p "$(srcdir)/build-config/REVISION" "$(distdir)/build-config/"
@GIT_CONTROLLED_TRUE@	$(AM_V_at)case `cat "$(distdir)/build-config/REVISION"` in *-dirty)                  \
@GIT_CONTROLLED_TRUE@            echo >&2 "WARNING: distribution does not match a single, unmodified revision.";; \
@GIT_CONTROLLED_TRUE@        esac

@GIT_CONTROLLED_TRUE@doxygen-user-html-compress:
@GIT_CONTROLLED_TRUE@	$(AM_V_at)if test -d "$(USER_DOC_DIR)/html"; then                     \
@GIT_CONTROLLED_TRUE@	    cd "$(USER_DOC_DIR)"; tar czf html.tar.gz html; rm -rf html/;     \
@GIT_CONTROLLED_TRUE@	fi

@GIT_CONTROLLED_TRUE@doxygen-project-number: update-revision
@GIT_CONTROLLED_TRUE@	$(AM_V_at)echo "PROJECT_NUMBER = \"@PACKAGE_VERSION@ (revision `cat $(srcdir)/build-config/REVISION`)\"" > doc/doxygen-project-number.cfg
@GIT_CONTROLLED_TRUE@doxygen-user-clean:
@GIT_CONTROLLED_TRUE@	$(AM_V_at)rm -rf $(USER_DOC_DIR)/*

@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@doxygen-user: doxygen-project-number doc/doxygen-user/main.dox doc/doxygen-user.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(AM_V_at)$(MKDIR_P) "$(USER_DOC_DIR)/tags"
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(AM_V_at)echo "OUTPUT_DIRECTORY = $(USER_DOC_DIR)" > doc/doxygen-user-at-make-time.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(AM_V_at)echo "GENERATE_TAGFILE = $(USER_DOC_DIR)/tags/@PACKAGE@.tag" >> doc/doxygen-user-at-make-time.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(AM_V_at)cat doc/doxygen-user.cfg doc/doxygen-project-number.cfg doc/doxygen-user-at-make-time.cfg > doc/doxygen-user-html.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(AM_V_at)if $(AM_V_P); then echo "QUIET = NO"; \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	          else               echo "QUIET = YES"; fi >>doc/doxygen-user-html.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(AM_V_at)$(MKDIR_P) "$(USER_DOC_DIR)/html"
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(AM_V_at)cp $(abs_srcdir)/doc/images/* $(USER_DOC_DIR)/html
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(OTF2_V_DOXYGEN)$(DOXYGEN) doc/doxygen-user-html.cfg

@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@doxygen-dev: doxygen-project-number doc/doxygen-user/main.dox doc/doxygen-user.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(AM_V_at)$(MKDIR_P) "$(USER_DOC_DIR)/tags"
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(AM_V_at)( \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@		echo "OUTPUT_DIRECTORY = $(USER_DOC_DIR)"; \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@		echo "GENERATE_TAGFILE = $(USER_DOC_DIR)/tags/@PACKAGE@.tag"; \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@		echo "INTERNAL_DOCS = YES"; \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@		echo "INPUT += @abs_top_srcdir@/src"; \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	) > doc/doxygen-user-at-make-time.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(AM_V_at)cat doc/doxygen-user.cfg doc/doxygen-project-number.cfg doc/doxygen-user-at-make-time.cfg > doc/doxygen-user-html.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(AM_V_at)if $(AM_V_P); then echo "QUIET = NO"; \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	          else               echo "QUIET = YES"; fi >>doc/doxygen-user-html.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(AM_V_at)$(MKDIR_P) "$(USER_DOC_DIR)/html"
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(AM_V_at)cp $(abs_srcdir)/doc/images/* $(USER_DOC_DIR)/html
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_TRUE@	$(OTF2_V_DOXYGEN)$(DOXYGEN) doc/doxygen-user-html.cfg

@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_FALSE@doxygen-user:
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_FALSE@	@echo "WARNING: doxygen not available. Cannot generate documentation." >&2

@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_FALSE@doxygen-dev:
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_FALSE@	@echo "WARNING: doxygen not available. Cannot generate documentation." >&2

@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@doxygen-user-pdf: doxygen-user
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	$(AM_V_at)cat doc/doxygen-user-html.cfg > doc/doxygen-user-pdf.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	$(AM_V_at)echo "ENABLED_SECTIONS = LATEX" >> doc/doxygen-user-pdf.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	$(AM_V_at)echo "GENERATE_HTML    = NO"    >> doc/doxygen-user-pdf.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	$(AM_V_at)echo "FILE_PATTERNS    = *.dox" >> doc/doxygen-user-pdf.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	$(AM_V_at)cp $(DOC_SRC_DIR)/license.tex $(USER_DOC_DIR)/pdf/
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	$(AM_V_at)-cp $(DOC_SRC_DIR)/images/project_logo.pdf $(USER_DOC_DIR)/pdf/
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	$(AM_V_at)echo "LATEX_CMD_NAME = \"pdflatex -file-line-error $(OTF2_V_pdflatex)\"" >>doc/doxygen-user-pdf.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	$(AM_V_at)if $(AM_V_P); then echo "QUIET = NO"; \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	          else               echo "QUIET = YES"; \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	                             echo "MAKEINDEX_CMD_NAME = \"makeindex -q\""; \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	          fi >>doc/doxygen-user-pdf.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	$(OTF2_V_DOXYGEN)$(DOXYGEN) doc/doxygen-user-pdf.cfg
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	$(AM_V_at)cd "$(USER_DOC_DIR)/pdf" && \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	make $(OTF2_V_DEVNULL) &&   \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	mv refman.pdf ../ &&        \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	rm -f * &&                  \
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_TRUE@	mv ../refman.pdf @PACKAGE@.pdf

@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_FALSE@doxygen-user-pdf: doxygen-user
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_FALSE@	$(AM_V_at)echo "WARNING: pdflatex not available. Cannot generate doxygen pdf documentation." >&2
@GIT_CONTROLLED_TRUE@@HAVE_DOXYGEN_LATEX_FALSE@	$(AM_V_at)if test -d "$(USER_DOC_DIR)/pdf"; then rm -rf "$(USER_DOC_DIR)/pdf"; fi

@GIT_CONTROLLED_TRUE@sphinx-user-install:

@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@sphinx-user-generate: sphinx-user sphinx-user-html-compress

@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@sphinx-project-number: update-revision
@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@	$(AM_V_at)echo "version = \"@PACKAGE_VERSION@\"" > doc/sphinx_project_number.py
@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@	$(AM_V_at)echo "release = \"@PACKAGE_VERSION@ (revision `cat $(srcdir)/build-config/REVISION`)\"" >> doc/sphinx_project_number.py

@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@sphinx-user: sphinx-project-number
@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@	$(AM_V_at)if test -f "build-backend/python_bindings_supported" || test -f "build-frontend/python_bindings_supported"; then \
@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@	  OTF2_PYTHON_SPHINX_GENERATOR_RUN=yes PYTHONPATH="$$PYTHONPATH:$(abs_srcdir)/src/python:$$PWD/doc" \
@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@	  make -C $(DOC_SRC_DIR)/python SPHINXBUILD=$(SPHINX) SPHINX_V=@AM_V@ SPHINX_DEFAULT_V=@AM_DEFAULT_V@ BUILDDIR=$$PWD/$(USER_DOC_DIR)/python html; \
@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@	else \
@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@	  echo "WARNING: python bindings not available, cannot build otf2 python bindings documentation" >&2; \
@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@	fi

@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@sphinx-user-html-compress:
@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@	$(AM_V_at)if test -d "$(USER_DOC_DIR)/python"; then                     \
@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@	    cd "$(USER_DOC_DIR)"; tar czf python.tar.gz python; rm -rf python/;	\
@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_TRUE@	fi

@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_FALSE@sphinx-user-generate:
@GIT_CONTROLLED_TRUE@@HAVE_PYTHON_SPHINX_FALSE@	 echo "WARNING: sphinx-build not available. Cannot generate python documentation." >&2

@GIT_CONTROLLED_FALSE@doxygen-user-pdf:

@GIT_CONTROLLED_FALSE@doxygen-user-install: sphinx-user-install
@GIT_CONTROLLED_FALSE@	$(AM_V_at)if test -f "$(DOC_SRC_DIR)/html.tar.gz"; then                         \
@GIT_CONTROLLED_FALSE@            $(MKDIR_P) $(DESTDIR)$(docdir);                                             \
@GIT_CONTROLLED_FALSE@            $(INSTALL_DATA) $(DOC_SRC_DIR)/html.tar.gz $(DESTDIR)$(docdir)/html.tar.gz; \
@GIT_CONTROLLED_FALSE@            cd $(DESTDIR)$(docdir);                                                     \
@GIT_CONTROLLED_FALSE@            tar xzf html.tar.gz;                                                        \
@GIT_CONTROLLED_FALSE@            rm -f html.tar.gz;                                                          \
@GIT_CONTROLLED_FALSE@        fi
@GIT_CONTROLLED_FALSE@	$(AM_V_at)if test -d "$(DOC_SRC_DIR)"; then                                         \
@GIT_CONTROLLED_FALSE@            cd $(DOC_SRC_DIR);                                                              \
@GIT_CONTROLLED_FALSE@            dirs="pdf tags";                                                                \
@GIT_CONTROLLED_FALSE@            cd -;                                                                           \
@GIT_CONTROLLED_FALSE@            for i in $$dirs; do                                                             \
@GIT_CONTROLLED_FALSE@                if test -d "$(DOC_SRC_DIR)/$$i"; then                                       \
@GIT_CONTROLLED_FALSE@                    $(MKDIR_P) $(DESTDIR)$(docdir)/$$i;                                     \
@GIT_CONTROLLED_FALSE@                    cd $(DOC_SRC_DIR)/$$i;                                                  \
@GIT_CONTROLLED_FALSE@                    files=`find . -type f`;                                                 \
@GIT_CONTROLLED_FALSE@                    cd -;                                                                   \
@GIT_CONTROLLED_FALSE@                    for j in $$files; do                                                    \
@GIT_CONTROLLED_FALSE@                        $(INSTALL_DATA) $(DOC_SRC_DIR)/$$i/$$j $(DESTDIR)$(docdir)/$$i/$$j; \
@GIT_CONTROLLED_FALSE@                    done;                                                                   \
@GIT_CONTROLLED_FALSE@                fi;                                                                         \
@GIT_CONTROLLED_FALSE@            done;                                                                           \
@GIT_CONTROLLED_FALSE@        fi

@GIT_CONTROLLED_FALSE@copy-revision-file-to-dist:

@GIT_CONTROLLED_FALSE@sphinx-user-generate:

@GIT_CONTROLLED_FALSE@sphinx-user-install:
@GIT_CONTROLLED_FALSE@	$(AM_V_at)if test -f "$(DOC_SRC_DIR)/python.tar.gz"; then                           \
@GIT_CONTROLLED_FALSE@            $(MKDIR_P) $(DESTDIR)$(docdir);                                                 \
@GIT_CONTROLLED_FALSE@            $(INSTALL_DATA) $(DOC_SRC_DIR)/python.tar.gz $(DESTDIR)$(docdir)/python.tar.gz; \
@GIT_CONTROLLED_FALSE@            cd $(DESTDIR)$(docdir);                                                         \
@GIT_CONTROLLED_FALSE@            tar xzf python.tar.gz;                                                          \
@GIT_CONTROLLED_FALSE@            rm -f python.tar.gz;                                                            \
@GIT_CONTROLLED_FALSE@        fi

###############################################################################

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
